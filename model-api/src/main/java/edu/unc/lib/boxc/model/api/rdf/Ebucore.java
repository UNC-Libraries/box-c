package edu.unc.lib.boxc.model.api.rdf;

import static org.apache.jena.rdf.model.ResourceFactory.createProperty;
import static org.apache.jena.rdf.model.ResourceFactory.createResource;

import org.apache.jena.rdf.model.Property;
import org.apache.jena.rdf.model.Resource;

/**
 * Vocabulary definitions from rdf-schemas/ebucore.rdf
 * @author Auto-generated by schemagen on 21 Apr 2016 12:16
 */
public class Ebucore {
    private Ebucore() {
    }

    /** The namespace of the vocabulary as a string */
    public static final String NS = "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#";

    /** The namespace of the vocabulary as a string
     *  @see #NS */
    public static String getURI() {
        return NS; }

    /** The namespace of the vocabulary as a resource */
    public static final Resource NAMESPACE = createResource( NS );

    /** The ontology's owl:versionInfo as a string */
    public static final String VERSION_INFO = "Improve the relations around the notions of"
            + "\"hasContributor\", \"Character\", \"Cast\".";

    /** The Data Identifier word (along with the SDID, if used), indicates the type
     *  of ancillary data that the packet corresponds to.
     */
    public static final Property DID = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#DID" );

    /** Secondary data identification word for ancillary data. Send mode identifier.
     *  An identifier which indicates the transmission timing for closed caption data.
     */
    public static final Property SDID = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#SDID" );

    /** A shorter version of the title. */
    public static final Property abridgedTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#abridgedTitle" );

    /** To provide a brief summary. */
    public static final Property abstract_ = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#abstract" );

    public static final Property adultContent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#adultContent" );

    /** The date when a Contact left an Organisation */
    public static final Property affiliationEndDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#affiliationEndDate" );

    public static final Property affiliationStartDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#affiliationStartDate" );

    /** To provide the address of an Agent (Contact/person or organisation). */
    public static final Property agentAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentAddress" );

    /** The age of a Contact/Person */
    public static final Property agentAge = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentAge" );

    public static final Property agentCountryOfResidence = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentCountryOfResidence" );

    /** To provide the email address of an agent (Contact/person or organisation). */
    public static final Property agentEmailAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentEmailAddress" );

    /** To provide the mobile telephone number of an Agent (Contact/person or organisation) */
    public static final Property agentMobileTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentMobileTelephoneNumber" );

    /** To provide the full name of Contact/person - family and given name. */
    public static final Property agentName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentName" );

    public static final Property agentNationality = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentNationality" );

    /** To provide a nickname of a Contact/person. */
    public static final Property agentNickname = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentNickname" );

    public static final Property agentPictureIdLocator = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentPictureIdLocator" );

    /** To provide the telephone number of an Agent (Contact/person or Organisation). */
    public static final Property agentTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentTelephoneNumber" );

    /** To provide the address of the webpage of an Agent (Contact/person or Organisation). */
    public static final Property agentWebHomepage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#agentWebHomepage" );

    /** To provide an alternative title. */
    public static final Property alternativeTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#alternativeTitle" );

    /** To define the Location (e.g. country, region) to which Rating and TargetAudience
     *  do NOT apply.
     */
    public static final Property appliesOutOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#appliesOutOf" );

    /** To define the location/region to which Rating and TargetAudience apply. */
    public static final Property appliesTo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#appliesTo" );

    /** To provide the aspect ratio of a video frame or image. Several types of different
     *  aspect ration can apply to the same video image. If necessary, specialised
     *  aspect ratios can be defined as subproperties.
     */
    public static final Property aspectRatio = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#aspectRatio" );

    /** The total number of audio channels contained in the MediaResource. */
    public static final Property audioChannelNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#audioChannelNumber" );

    /** To provide the configuration of an audio track (e.g. stereo pair) in a MediaResource. */
    public static final Property audioTrackConfiguration = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#audioTrackConfiguration" );

    /** To provide the audio encoding bit depth. Also called sample size. */
    public static final Property bitDepth = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#bitDepth" );

    /** To provide the bitrate at which the MediaResource can be played in bits/second.
     *  Current bitrate if constant, and average bitrate if variable.
     */
    public static final Property bitRate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#bitRate" );

    /** The maximum bitrate when variable, in bits per second. */
    public static final Property bitRateMax = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#bitRateMax" );

    /** A flag to indicate if the bit rate is fixed or variable. */
    public static final Property bitRateMode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#bitRateMode" );

    /** To provide a bookmark. */
    public static final Property bookmark = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#bookmark" );

    /** A name attributed to a BusinessObject. */
    public static final Property businessObjectName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#businessObjectName" );

    /** To provide information on the source of a captioning file. */
    public static final Property captioningSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#captioningSource" );

    /** Identifies relationship between a digital instantiation of a resource and
     *  its direct copy, with no generational loss.
     */
    public static final Property clonedTo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#clonedTo" );

    /** To provide information on the product family of the Codec. */
    public static final Property codecFamily = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#codecFamily" );

    /** To provide a name for the Codec, e.g. a product name. */
    public static final Property codecName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#codecName" );

    /** To provide a name for the vendor of the Codec. */
    public static final Property codecVendor = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#codecVendor" );

    /** To provide information on the version of the Codec. */
    public static final Property codecVersion = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#codecVersion" );

    /** To provide a comment. */
    public static final Property comments = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#comments" );

    /** The education details of a Contact / person. */
    public static final Property contactEducation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactEducation" );

    /** Information on the family of a Contact / person. */
    public static final Property contactFamilyInformation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactFamilyInformation" );

    /** The hobbies of a Contact / person. */
    public static final Property contactHobbies = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactHobbies" );

    /** The marital status of a Contact / person. */
    public static final Property contactMaritalStatus = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactMaritalStatus" );

    /** The job / occupation name of a Contact / person. */
    public static final Property contactOccupation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactOccupation" );

    /** The username by which a Contact / person is known e.g. when attributing a
     *  rating value.
     */
    public static final Property contactUsername = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#contactUsername" );

    /** The date when the resource was first broadcast publicly on television or radio. */
    public static final Property dateBroadcast = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateBroadcast" );

    /** The date of creation of the Resource. */
    public static final Property dateCreated = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateCreated" );

    /** The date when the resource was removed from institutional holdings. */
    public static final Property dateDeleted = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateDeleted" );

    /** To provide the date of digitisation of the Resource. */
    public static final Property dateDigitised = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateDigitised" );

    /** The date when the resource was first made available to the public for purchase,
     *  download, or online access.
     */
    public static final Property dateDistributed = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateDistributed" );

    /** The date when the resource was removed from institutional holdings. */
    public static final Property dateIngested = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateIngested" );

    /** To provide the date of release of the Resource. */
    public static final Property dateIssued = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateIssued" );

    /** The date when the license for the resource begins. */
    public static final Property dateLicenced = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateLicenced" );

    /** The date when the resource was copied or converted from an obsolete or endangered
     *  original format to a more updated format for preservation.
     */
    public static final Property dateMigrated = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateMigrated" );

    /** To indicate the date at which the Resource has been modified. */
    public static final Property dateModified = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateModified" );

    /** The date when the resource was converted from its original format into a format
     *  pre-selected by the institution for preservation.
     */
    public static final Property dateNormalized = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateNormalized" );

    /** The date when the resource was moved from one digital or physical location
     *  to another.
     */
    public static final Property dateTransferred = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateTransferred" );

    /** The most recent date when the resource was confirmed to be valid through manual
     *  or digital QC.
     */
    public static final Property dateValidated = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dateValidated" );

    /** Identifies a content-based relationship between two resources. */
    public static final Property derivedTo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#derivedTo" );

    /** This can be specialised by using sub-properties like defined in
     * http://www.ebu.ch/metadata/cs/web/ebu_DescriptionTypeCodeCS_p.xml.htm
     *  implemented as examples as e.g. 'summary' or 'script'.
     */
    public static final Property description = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#description" );

    /** Describes the physical dimensions of a media resource, with units of measure
     *  concatenated to become part of the value.
     */
    public static final Property dimensions = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dimensions" );

    /** To provide a dopesheet with a title and brief description for news. */
    public static final Property dopesheet = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dopesheet" );

    /** Identifies relationship between a physical instantiation of a resource and
     *  a duplicate physical copy that may involve generational loss.
     */
    public static final Property dubbedTo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#dubbedTo" );

    /** To provide information on the duration of a MediaResource. It corresponds
     *  to 'duration' in the Ontology for Media Resources.
     */
    public static final Property duration = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#duration" );

    /** To provide a duration as normal time. */
    public static final Property durationNormalPlayTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationNormalPlayTime" );

    /** To provide a duration as a number of EditUnits which value is for instance
     *  the inverse of the audio sample rate or video frame rate.
     */
    public static final Property durationNumberEditUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationNumberEditUnit" );

    /** To provide information on the published / announced duration of an EditorialObject. */
    public static final Property durationPublished = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationPublished" );

    /** To provide a published duration as normal time. */
    public static final Property durationPublishedNormalPlayTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationPublishedNormalPlayTime" );

    /** To provide a published duration as a number of EditUnits which value is for
     *  instance the inverse of the audio sample rate or video frame rate.
     */
    public static final Property durationPublishedNumberEditUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationPublishedNumberEditUnit" );

    /** The published duration expressed as a timecode. */
    public static final Property durationPublishedTimecode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationPublishedTimecode" );

    /** The duration expressed as a timecode. */
    public static final Property durationTimecode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#durationTimecode" );

    /** The edit unit is e.g. the inverse of the audio sample rate or video frame
     *  rate.
     */
    public static final Property editUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#editUnit" );

    /** The encoding level. */
    public static final Property encodingLevel = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#encodingLevel" );

    /** The encoding profile */
    public static final Property encodingProfile = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#encodingProfile" );

    /** The start point of the media resource. */
    public static final Property end = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#end" );

    /** The date on which the license for the resource expires. */
    public static final Property endLicenceDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#endLicenceDate" );

    /** The start time expressed using a time expression. */
    public static final Property endNormalPlayTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#endNormalPlayTime" );

    /** A start time expressed as a number of edit units. */
    public static final Property endNumberEditUnits = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#endNumberEditUnits" );

    /** A start time expressed as timecode. */
    public static final Property endTimecode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#endTimecode" );

    /** To provide a deescription for an Event. */
    public static final Property eventDescription = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventDescription" );

    /** The duration of an event. */
    public static final Property eventDuration = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventDuration" );

    /** The end date of an Event. */
    public static final Property eventEndDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventEndDate" );

    /** To provide a name for an Event. */
    public static final Property eventName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventName" );

    /** The period of time during which an Event has occured. */
    public static final Property eventPeriod = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventPeriod" );

    /** The start date of an Event. */
    public static final Property eventStartDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#eventStartDate" );

    /** To provide a family name / last name. */
    public static final Property familyName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#familyName" );

    /** A flag to indicate if an agent of fictitious (set to true). */
    public static final Property fictitious = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#fictitious" );

    /** Provides the size of a MediaResource in bytes. */
    public static final Property fileSize = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#fileSize" );

    /** The name of the file containing the Resource. */
    public static final Property filename = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#filename" );

    /** Provides a user/audience-generated description, tag, or label for resource
     *  content.
     */
    public static final Property folksonomy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#folksonomy" );

    /** A link to a an BusinessObject or a Resource preceding the current BusinessObject
     *  or Resource in an ordered sequence
     */
    public static final Property followsInSequence = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#followsInSequence" );

    /** The frame rate of the video signal in frame per second. */
    public static final Property frameRate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#frameRate" );

    /** The unit used to express the frame width or height. The unit by default is
     *  'pixel'.
     */
    public static final Property frameSizeUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#frameSizeUnit" );

    /** Identifies the frames per second at which a visual resource should be played
     *  back for human consumption.
     */
    public static final Property framesPerSecond = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#framesPerSecond" );

    /** To provide the frequency of an AudioChannel filter */
    public static final Property frequency = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#frequency" );

    /** To provide one or more given names. */
    public static final Property givenName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#givenName" );

    /** A textual description of a Group. */
    public static final Property groupDescription = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#groupDescription" );

    /** The name attributed to a Group. */
    public static final Property groupName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#groupName" );

    /** A property to establish the relation between a Contact/person and an Organisation. */
    public static final Property hasAffiliation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAffiliation" );

    /** A property to signal the presence of AncillaryData associated with the EditorialObject
     *  and / or MediaResource.
     */
    public static final Property hasAncillaryData = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAncillaryData" );

    public static final Property hasAncillaryDataFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAncillaryDataFormat" );

    /** A property to signal the presence of Annotation information associated with
     *  an EditorialObject and / or a MediaResource.
     */
    public static final Property hasAnnotation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAnnotation" );

    /** To identify the Agent, Contact/person or Organisation who has provided the
     *  Annotation.
     */
    public static final Property hasAnnotationSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAnnotationSource" );

    /** To signal the presence of AudioDescription. */
    public static final Property hasAudioDescription = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAudioDescription" );

    public static final Property hasAudioEncodingFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAudioEncodingFormat" );

    public static final Property hasAudioFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasAudioFormat" );

    /** To signal the presence of Captioning. */
    public static final Property hasCaptioning = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCaptioning" );

    public static final Property hasCaptioningFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCaptioningFormat" );

    public static final Property hasCastMember = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCastMember" );

    public static final Property hasCharacter = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCharacter" );

    /** To identify the Codec with which the Resource has been encoded. */
    public static final Property hasCodec = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCodec" );

    public static final Property hasColourSpace = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasColourSpace" );

    /** To provide information on a Contact for an Organisation or a physical person
     *  (e.g. the agent of an actor).
     */
    public static final Property hasContact = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasContact" );

    public static final Property hasContainerFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasContainerFormat" );

    public static final Property hasContainerMimeType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasContainerMimeType" );

    /** To provide information on Contacts/persons or Organisations who have contributed
     *  to the BusinessObject or Resource.
     */
    public static final Property hasContributor = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasContributor" );

    /** A property to identify the Events and or Locations, all real or fictional,
     *  covered by the BusinessObject.
     */
    public static final Property hasCoverage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCoverage" );

    /** The Location where content has been created. */
    public static final Property hasCreationLocation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCreationLocation" );

    /** To identify an Agent involved in the creation of the Resource or BusinessObject. */
    public static final Property hasCreator = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCreator" );

    public static final Property hasCrewMember = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasCrewMember" );

    public static final Property hasDataFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasDataFormat" );

    /** To identify Departments within an Organisation. */
    public static final Property hasDepartment = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasDepartment" );

    public static final Property hasDocumentFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasDocumentFormat" );

    /** To associate a Dopesheet with a NewsItem. */
    public static final Property hasDopesheet = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasDopesheet" );

    public static final Property hasEncodingFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasEncodingFormat" );

    /** To identify an episode of a Series or a Season. */
    public static final Property hasEpisode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasEpisode" );

    /** To associate an Event with a Location. */
    public static final Property hasEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasEvent" );

    public static final Property hasFileFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasFileFormat" );

    /** A property to define the Format of a Resource. */
    public static final Property hasFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasFormat" );

    /** Identifies the generation of a version of a resource, i.e. master, edit master,
     *  distribution copy, etc.
     */
    public static final Property hasGeneration = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasGeneration" );

    /** To define a Genre/category associated to the BusinesssObject. */
    public static final Property hasGenre = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasGenre" );

    public static final Property hasHomepage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasHomepage" );

    public static final Property hasIdPicture = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasIdPicture" );

    public static final Property hasImageFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasImageFormat" );

    public static final Property hasKeyCareerEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasKeyCareerEvent" );

    public static final Property hasKeyPersonalEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasKeyPersonalEvent" );

    /** To associate a concept, descriptive phrase or Keyword that specifies the topic
     *  of the BusinessObject or Annotation.
     */
    public static final Property hasKeyword = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasKeyword" );

    /** To associate a Language to a Resource or BusinessObject. A controlled vocabulary
     *  based on BCP 47 is recommended. This property can also be used to identify
     *  the presence of sign language (RFC 5646). By inheritance, the hasLanguage
     *  property applies indifferently at the MediaResource / Fragment / Track levels
     *  at which the usage is being defined. Best practice recommends to use to best
     *  possible level of granularity fo describe the usage of language within a MediaResource
     *  including at Fragment and Track levels.
     */
    public static final Property hasLanguage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasLanguage" );

    /** To associate a Location with a BusinessObject. */
    public static final Property hasLocation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasLocation" );

    /** Logos can be used in a variety of contexts. Logo can be associated with an
     *  Organisation or a Service or a PublicationChannel.
     */
    public static final Property hasLogo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasLogo" );

    /** To define Parts (segments, fragments, etc.) withiin a MediaResource. */
    public static final Property hasMediaFragment = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasMediaFragment" );

    public static final Property hasMedium = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasMedium" );

    /** To establish group/collection relationship between EditorialObjects. */
    public static final Property hasMember = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasMember" );

    /** To identify the Agent (Contact/person or Organisation) who has created the
     *  metadata.
     */
    public static final Property hasMetadataAttributor = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasMetadataAttributor" );

    public static final Property hasMimeType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasMimeType" );

    /** To define an ObjectType for the BusinessObject (e.g. book, report, programme,
     *  clip) if not defined as a subClass of BusinessObject.
     */
    public static final Property hasObjectType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasObjectType" );

    public static final Property hasOriginalLanguage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasOriginalLanguage" );

    /** To define Parts (segments, fragments, etc.) within a BusinessObject. */
    public static final Property hasPart = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPart" );

    /** To provide a visual representation of TargetAudience or Rating. */
    public static final Property hasPictogram = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPictogram" );

    /** To associate a PublicationEvent with a PublicationChannel. */
    public static final Property hasPublicationChannel = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPublicationChannel" );

    /** To associate PublicationEvents with PublicationChannels or as elements of
     *  a PublicationHistory or PublicationPlanning.
     */
    public static final Property hasPublicationEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPublicationEvent" );

    public static final Property hasPublicationHistory = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPublicationHistory" );

    /** To identify an Agent involved in the publication of the Resource or BusinessObject. */
    public static final Property hasPublisher = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasPublisher" );

    /** To identify the presence of Rating attributed to a Resource or BusinessObject. */
    public static final Property hasRating = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRating" );

    /** To identify an Agent (Contact/person or Organisation) who has proposed a Rating. */
    public static final Property hasRatingSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRatingSource" );

    /** To associate an AudioChannel with an AudioPack or an AudioStream. */
    public static final Property hasRelatedAudioChannel = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedAudioChannel" );

    /** To identify the AudioContent associated with an AudioProgramme. */
    public static final Property hasRelatedAudioContent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedAudioContent" );

    /** To identify AudioObjects associated with AudioContent or other AudioObjects. */
    public static final Property hasRelatedAudioObject = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedAudioObject" );

    /** To associate an AudioStream with an AudioTrack. */
    public static final Property hasRelatedAudioStream = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedAudioStream" );

    /** To associate an AudioTrack with an AudioStream or an AudioTrackUID. */
    public static final Property hasRelatedAudioTrack = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedAudioTrack" );

    /** EditorialObjects can be related to other BusinessOjects, Assets (and associated
     *  rights), PublicationEvents(defined when commissioning the EditorialObject
     *  before it is instantiated as a Resource (manifestation), or Resources, or
     *  Ratings.
     */
    public static final Property hasRelatedBusinessObject = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedBusinessObject" );

    public static final Property hasRelatedEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedEvent" );

    /** To associate an Image with a BusinessObject. */
    public static final Property hasRelatedImage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedImage" );

    public static final Property hasRelatedLocation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedLocation" );

    /** To associate a Part of an EditorialObject with a MediaFragment within the
     *  association MediaResource instantiating the EditorialObject.
     */
    public static final Property hasRelatedMediaFragment = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedMediaFragment" );

    /** To associate a Picture with a BusinessObject or a Resource. */
    public static final Property hasRelatedPicture = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedPicture" );

    /** To identify the PublicationEvent associated with a MediaResource (manifestation
     *  of an EditorialObject).
     */
    public static final Property hasRelatedPublicationEvent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedPublicationEvent" );

    /** To identify a Resource associated with an Asset or a BusinessObject or a PublicationEvent
     *  or another Resource.
     */
    public static final Property hasRelatedResource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRelatedResource" );

    public static final Property hasRights = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRights" );

    /** To identify a Contact/person who can provide assistance / guidance regarding
     *  the associated Rights.
     */
    public static final Property hasRightsContact = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRightsContact" );

    /** To identify an Agent (Contact/person or Organisation) having/managing Rights. */
    public static final Property hasRightsHolder = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRightsHolder" );

    /** To define the role of an Agent (Contact/person or Organisation). The association
     *  in a particular context is made by declaring the hasCastRole associated with
     *  the BusinessObject.
     */
    public static final Property hasRole = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasRole" );

    /** The Season of a Series. */
    public static final Property hasSeason = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSeason" );

    /** To identify the presence of Signing associated to the BusinessObject/Resource. */
    public static final Property hasSigning = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSigning" );

    public static final Property hasSigningFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSigningFormat" );

    /** To identify a Resource as the source of another Resource. */
    public static final Property hasSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSource" );

    /** To identify staff working within an Organisation. */
    public static final Property hasStaff = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasStaff" );

    /** Identifies the technical video standard of a resource, i.e. NTSC or PAL. */
    public static final Property hasStandard = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasStandard" );

    /** To define a particular type of storage / repository associated with the Locator
     *  from where a Resource can be accessed.
     */
    public static final Property hasStorageType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasStorageType" );

    /** To associate a Subject addressed with a BusinessObject / Resource. */
    public static final Property hasSubject = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSubject" );

    /** To signal the presence of Subtitling associated with the EditorialObject or
     *  MediaResource.
     */
    public static final Property hasSubtitling = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSubtitling" );

    public static final Property hasSubtitlingFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasSubtitlingFormat" );

    /** To associate a TargetAudience (e.g. for parental guiddance or targeting a
     *  particular social group) with a BusinessObject/Resource.
     */
    public static final Property hasTargetAudience = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasTargetAudience" );

    public static final Property hasTheme = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasTheme" );

    public static final Property hasTopic = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasTopic" );

    /** To associate audio/data/video tracks with a MediaResource. */
    public static final Property hasTrack = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasTrack" );

    /** To define a type of BusinessObject is not declared as a subClass of BusinessObject. */
    public static final Property hasType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasType" );

    /** To identify another version of an Asset, BusinessObject or Resource. */
    public static final Property hasVersion = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasVersion" );

    public static final Property hasVideoEncodingFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasVideoEncodingFormat" );

    public static final Property hasVideoFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hasVideoFormat" );

    /** The hash value associated to a Resource. There are different methods / algorithms
     *  to calculate hash values, which can be defined as subproperties.
     */
    public static final Property hashValue = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#hashValue" );

    /** The height of e.g. a video frame typically expressed as a number of lines
     *  or the height of a picture/image expressed in millimeters or else.
     */
    public static final Property height = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#height" );

    /** The unit used to measure a Height e.g. in pixels or number of lines or millimeters
     *  or else.
     */
    public static final Property heightUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#heightUnit" );

    /** The high pass frequency of the AudioChannel filter. */
    public static final Property highPass = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#highPass" );

    /** To provide highlights. */
    public static final Property highlights = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#highlights" );

    /** To identify a BusinessObject or Resource on which an Agent (Contact/person
     *  or Organisation) holds Rights.
     */
    public static final Property holdsRightsOver = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#holdsRightsOver" );

    /** This property is intended to provide an alternative identifier for the resource,
     *  which has no URI counterpart. In the case where the alternative identifier
     *  can be expressed as a URI, it is recommended to use owl:sameAs instead.Corresponds
     *  to 'identifier' in the W3C Ontology for Media Annotation. The URI may be used
     *  to express an alternative identifier of the resource, or to share an identifier
     *  used by other instances of the same resource (equivalent to the fucntionality
     *  owl:sameAs).
     */
    public static final Property identifier = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#identifier" );

    /** Identifies the inches per second at which an analog audio tape should be played
     *  back for human consumption.
     */
    public static final Property inchesPerSecond = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#inchesPerSecond" );

    /** To link a particular manifestation of a BusinessObject to the corresponding
     *  Resource.
     */
    public static final Property instantiates = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#instantiates" );

    /** To identify a Contact/person or Organisation as part of a cast list. */
    public static final Property isAgent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isAgent" );

    /** To identify the character personified by a Cast individual. */
    public static final Property isCharacter = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isCharacter" );

    /** Identifies relationship between a digital instantiation of a resource and
     *  its direct copy, with no generational loss.
     */
    public static final Property isClonedFrom = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isClonedFrom" );

    /** Copyright statement. */
    public static final Property isCopyrightedBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isCopyrightedBy" );

    /** The Rights or policy applicable to the BusinessObject, Asset, Resource or
     *  PublicationEvent.
     */
    public static final Property isCoveredBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isCoveredBy" );

    /** Identifies a content-based relationship between two resources. */
    public static final Property isDerivedFrom = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isDerivedFrom" );

    /** Identifies relationship between a physical instantiation of a resource and
     *  a duplicate physical copy that may involve generational loss.
     */
    public static final Property isDubbedFrom = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isDubbedFrom" );

    /** The Episode of a Series or a Season. */
    public static final Property isEpisodeOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isEpisodeOf" );

    /** To identify Contact/persons being fictitious. */
    public static final Property isFictitiousContact = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isFictitiousContact" );

    /** To identify the MediaResource to which the MediaFragment belongs to. */
    public static final Property isMediaFragmentOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isMediaFragmentOf" );

    /** To identify a Group to which an EidtorialObject is a member of. */
    public static final Property isMemberOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isMemberOf" );

    /** A link to a an BusinessObject or a Resource following the current BusinessObject
     *  or Resource in an ordered sequence
     */
    public static final Property isNextInSequence = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isNextInSequence" );

    /** To identify the Service that operates the PublicationChannel. */
    public static final Property isOperatedBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isOperatedBy" );

    /** To identify the Agent (Contact/person or Organisation) who owns a Service
     *  operating a PublicationChannel.
     */
    public static final Property isOwnedBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isOwnedBy" );

    /** To express references across Assets, BusinessObjects or Resources. */
    public static final Property isReferencedBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isReferencedBy" );

    /** To establish relationships between Assets, BusinessObjects, PublicationEvents,
     *  Ratings and Resources.
     */
    public static final Property isRelatedTo = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isRelatedTo" );

    /** To identify substitutions. */
    public static final Property isReplacedBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isReplacedBy" );

    /** To express strong relations between Assets, BusinessObjects or Resources. */
    public static final Property isRequiredBy = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isRequiredBy" );

    /** The Season of a Series. */
    public static final Property isSeasonOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isSeasonOf" );

    /** To identify related versions. */
    public static final Property isVersionOf = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#isVersionOf" );

    /** To provide a definition for a Keyword. */
    public static final Property keywordDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#keywordDefinition" );

    /** To provide the number of the line on which ancillary data is being carried
     *  and the equivalent in the digital domain.
     */
    public static final Property lineNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#lineNumber" );

    /** To provide the address of a Location. */
    public static final Property locationAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddress" );

    /** To provide the Area part of an Adrress. */
    public static final Property locationAddressArea = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddressArea" );

    /** To provide the country name and or country code. */
    public static final Property locationAddressCountry = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddressCountry" );

    /** To write address line with e.g. the street name and number. */
    public static final Property locationAddressLine = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddressLine" );

    /** To provide the name of a city, viallge, etc. */
    public static final Property locationAddressLocality = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddressLocality" );

    /** To provide an address postal code. */
    public static final Property locationAddressPostalCode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAddressPostalCode" );

    /** To define the altitude of a Location in meters. */
    public static final Property locationAltitude = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationAltitude" );

    /** To specify the name of the gps coordinate system used for the Location. */
    public static final Property locationCoordinateSystemName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationCoordinateSystemName" );

    /** To provide a description of a particular Location. */
    public static final Property locationDescription = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationDescription" );

    /** The latitude of the Location. */
    public static final Property locationLatitude = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationLatitude" );

    /** To define the longitude of the Location. */
    public static final Property locationLongitude = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationLongitude" );

    /** The name by which a Location is known. */
    public static final Property locationName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationName" );

    /** To provide a description of a particular region assocoated to the Location. */
    public static final Property locationRegion = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locationRegion" );

    /** A locator from where the Resource can be accessed. */
    public static final Property locator = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locator" );

    /** Information about storage accessed by the locator. */
    public static final Property locatorTargetInformation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#locatorTargetInformation" );

    /** The value for integrated loudness measured at AudioProgramme or AudioContent
     *  level.
     */
    public static final Property loudnessIntegratedLoudness = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessIntegratedLoudness" );

    /** The value for maximum momentary loudness measured at AudioProgramme or AudioContent
     *  level.
     */
    public static final Property loudnessMaxMomentary = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessMaxMomentary" );

    /** The value for maximum true peak loudness measured at AudioProgramme or AudioContent
     *  level.
     */
    public static final Property loudnessMaxTruepeak = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessMaxTruepeak" );

    /** The method for loudness measurement at AudioProgramme or AudioContent level. */
    public static final Property loudnessMethod = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessMethod" );

    /** All the parameters for measurement of loudness at the AudioContent or AudioProgramme
     *  level.
     */
    public static final Property loudnessParameters = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessParameters" );

    /** The loudness range measured at AudioProgramme or AudioContent level. */
    public static final Property loudnessRange = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#loudnessRange" );

    /** The maximum short term loudness measured at AudioProgramme or AudioContent
     *  level.
     */
    public static final Property lounessMaxShortTerm = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#lounessMaxShortTerm" );

    /** The low pass frequency of the AudioChannel filter. */
    public static final Property lowPass = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#lowPass" );

    /** To provide the main title by which the media resource is known. */
    public static final Property mainTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#mainTitle" );

    /** To provide a salutation title e.g M. Ms, Dr, Pr. */
    public static final Property nameTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#nameTitle" );

    /** A flag to signal that a noise filter has been used. */
    public static final Property noiseFilter = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#noiseFilter" );

    /** A flag to indicate that the BusinessObejct has not been rated. */
    public static final Property notRated = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#notRated" );

    /** The number of Tracks composing the MediaResource. */
    public static final Property numberOfTracks = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#numberOfTracks" );

    /** To provide a definition of an AudioObject type. */
    public static final Property objectTypeDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#objectTypeDefinition" );

    /** To provide the Area part of an Address. */
    public static final Property officeAddressArea = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeAddressArea" );

    /** To provide the country name and or country code. */
    public static final Property officeAddressCountry = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeAddressCountry" );

    /** To write address line with e.g. the street name and number. */
    public static final Property officeAddressLine = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeAddressLine" );

    /** To provide the name of a city, village, etc. */
    public static final Property officeAddressLocality = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeAddressLocality" );

    /** To provide an address postal code. */
    public static final Property officeAddressPostalCode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeAddressPostalCode" );

    /** To provide the professional/office email address of an agent (Contact/person
     *  or organisation).
     */
    public static final Property officeEmailAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeEmailAddress" );

    /** To provide an office/professional/company web homepage of an Agent (Contact/person
     *  or Organisation).
     */
    public static final Property officeHomepage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeHomepage" );

    /** To provide the professional / office address of an agent (Contact/person or
     *  organisation).
     */
    public static final Property officeMailAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeMailAddress" );

    /** To provide the professional/office/company mobile telephone number of an agent
     *  (Contact/person or organisation).
     */
    public static final Property officeMobileTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeMobileTelephoneNumber" );

    /** To provide an office/professional/company telephone number of an Agent (Contact/person
     *  or Organisation).
     */
    public static final Property officeTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#officeTelephoneNumber" );

    /** To provide the full name of an Organisation. */
    public static final Property organisationName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#organisationName" );

    /** The orientation of a Document or an Image i.e. landscape or portrait. */
    public static final Property orientation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#orientation" );

    /** To provide the original title attributed to the media resource e.g. in its
     *  original language.
     */
    public static final Property originalTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#originalTitle" );

    /** To identify the service (s) that an Agent (Contact/person or Organisation
     *  owns.
     */
    public static final Property owns = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#owns" );

    /** The size of a media package in Bytes. */
    public static final Property packageByteSize = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#packageByteSize" );

    /** The name attributed to a package. */
    public static final Property packageName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#packageName" );

    /** A definition associated with the Part. */
    public static final Property partDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#partDefinition" );

    /** A name by which the Part is identified. */
    public static final Property partName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#partName" );

    /** The number associated to a Part as one among many. */
    public static final Property partNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#partNumber" );

    /** The total number of Parts associated with a BusinessObject. */
    public static final Property partTotalNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#partTotalNumber" );

    /** Identifies the rate of units against time at which the resource should be
     *  played back for human consumption. If the unit of measure is known, use sub-properties
     *  framesPerSecond or inchesPerSecond.
     */
    public static final Property playbackSpeed = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#playbackSpeed" );

    /** To describe a playlist. */
    public static final Property playlist = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#playlist" );

    /** To provide the Area part of an Adrress. */
    public static final Property privateAddressArea = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateAddressArea" );

    /** To provide the country name and or country code. */
    public static final Property privateAddressCountry = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateAddressCountry" );

    /** To write address line with e.g. the street name and number. */
    public static final Property privateAddressLine = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateAddressLine" );

    /** To provide the name of a city, viallge, etc. */
    public static final Property privateAddressLocality = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateAddressLocality" );

    /** To provide an address postal code. */
    public static final Property privateAddressPostalCode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateAddressPostalCode" );

    /** To provide the private email address of an agent (Contact/person) */
    public static final Property privateEmailAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateEmailAddress" );

    /** To provide an private web homepage of an Agent (Contact/person). */
    public static final Property privateHomepage = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateHomepage" );

    /** To provide the private / personal address of an agent (Contact/person). */
    public static final Property privateMailAddress = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateMailAddress" );

    /** To provide the private mobile telephone number of an agent (Contact/person). */
    public static final Property privateMobileTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateMobileTelephoneNumber" );

    /** To provide the private telephone number of an Agent (Contact/person). */
    public static final Property privateTelephoneNumber = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#privateTelephoneNumber" );

    /** To provide textual promotional information. */
    public static final Property promotionalInformation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#promotionalInformation" );

    /** To indicate a publication status. */
    public static final Property pubStatus = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#pubStatus" );

    /** To provide a name to a PublicationChannel e.g. a TV channel or website. */
    public static final Property publicationChannelName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publicationChannelName" );

    /** The actual end date and time of a PublicationEvent. */
    public static final Property publicationEndDateTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publicationEndDateTime" );

    /** To provide a name to a PublicationEvent. */
    public static final Property publicationEventName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publicationEventName" );

    /** To express specifically the schedule date to which a PublicationEvent is related
     *  in particular if the broacdast time is after midnight. For example, the schedule
     *  date would be May 29th and the programme is published at 1 am on May 30th,
     *  while still associated in the schedule with the night of May 29th.
     */
    public static final Property publicationScheduleDate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publicationScheduleDate" );

    /** The actual start date and time of a PublicationEvent. */
    public static final Property publicationStartDateTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publicationStartDateTime" );

    /** The end date and time of a PublicationEvent as scheduled. */
    public static final Property publishedEndDateTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publishedEndDateTime" );

    /** The start date and time of a PublicationEvent as scheduled. */
    public static final Property publishedStartDateTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publishedStartDateTime" );

    /** The title used to identify the work at publication time. */
    public static final Property publishedTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#publishedTitle" );

    /** The maximum value of the scale used for rating a media resource. */
    public static final Property ratingScaleMax = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#ratingScaleMax" );

    /** The minimum value of the scale used for rating a Resource. */
    public static final Property ratingScaleMin = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#ratingScaleMin" );

    /** To identify the environment in which rating applies. */
    public static final Property ratingSystemEnvironment = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#ratingSystemEnvironment" );

    /** To identify a rating system by its name. */
    public static final Property ratingSystemName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#ratingSystemName" );

    /** To express a free text rating value defined in a rating classification scheme. */
    public static final Property ratingValue = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#ratingValue" );

    /** To provide a reason for which Rating as been attributed as provided. */
    public static final Property reason = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#reason" );

    /** To express a reference between Assets, BusinessObjects or Resources. */
    public static final Property references = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#references" );

    /** To define the bottom right corner of a zone on the x-axis. If present with
     *  regionDelimY, the zone definition is complemented by the associated values
     *  of the height and width.
     */
    public static final Property regionDelimX = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#regionDelimX" );

    /** To define the bottom right corner of a zone on the y-axis. If present with
     *  regionDelimX, the zone definition is complemented by the associated values
     *  of the height and width.
     */
    public static final Property regionDelimY = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#regionDelimY" );

    /** To provide a link to a web resource containing information related to an Agent
     *  (Contact/person or Organisation).
     */
    public static final Property relatedLink = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#relatedLink" );

    /** To identify substitution. */
    public static final Property replaces = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#replaces" );

    /** To express dependency. */
    public static final Property requires = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#requires" );

    /** This can be specialised by using sub-properties like defined in
     * http://www.ebu.ch/metadata/cs/web/ebu_DescriptionTypeCodeCS_p.xml.htm
     *  implemented as examples as e.g. 'summary' or 'script'.
     */
    public static final Property resourceDescription = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#resourceDescription" );

    /** A name by which the resource can be identified. */
    public static final Property resourceName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#resourceName" );

    /** To provide a text for a review. */
    public static final Property review = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#review" );

    /** The expression of Rights as free text. */
    public static final Property rightsExpression = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#rightsExpression" );

    /** A link to e.g. a webpage where an expression of the rights can be found and
     *  consulted.
     */
    public static final Property rightsLink = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#rightsLink" );

    /** To provide a definition for a role */
    public static final Property roleDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#roleDefinition" );

    /** The frequency at which audio is sampled per second. Also called sampling rate. */
    public static final Property sampleRate = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#sampleRate" );

    /** The size of an audio sample in bits. Also called bit depth. */
    public static final Property sampleSize = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#sampleSize" );

    /** The type of audio sample. */
    public static final Property sampleType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#sampleType" );

    /** To define the scanning format for a MediaResource. For video, the two main
     *  values are "interlaced" or "progressive".
     */
    public static final Property scanningFormat = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#scanningFormat" );

    /** To provide a script. */
    public static final Property script = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#script" );

    /** Provides a shot-by-shot description of resource content. */
    public static final Property shotlog = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#shotlog" );

    /** To identify the source of the signing resource. */
    public static final Property signingSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#signingSource" );

    /** The start point of the MediaResource. */
    public static final Property start = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#start" );

    /** The start time expressed using a time expression. */
    public static final Property startNormalPlayTime = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#startNormalPlayTime" );

    /** A start time expressed as a number of edit units. */
    public static final Property startNumberEditUnits = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#startNumberEditUnits" );

    /** A start time expressed as timecode. */
    public static final Property startTimecode = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#startTimecode" );

    /** To provide a definition for storage. */
    public static final Property storageDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#storageDefinition" );

    /** A complementary subtitle. */
    public static final Property subtitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#subtitle" );

    /** To identify the source of the Subtitling resource. */
    public static final Property subtitlingSource = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#subtitlingSource" );

    /** To provide a summary. */
    public static final Property summary = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#summary" );

    /** To provide a summary. */
    public static final Property synopsis = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#synopsis" );

    /** To provide a Table of Content. */
    public static final Property tableOfContent = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#tableOfContent" );

    /** To define the system used to provide a TargetAudience. */
    public static final Property targetAudienceSystem = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#targetAudienceSystem" );

    /** The value of an Annotation as free text. */
    public static final Property textualAnnotation = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#textualAnnotation" );

    /** Specifies the title or name given to the resource. A root for the definition
     *  of subproperties defining ebucore titles of different types. The ebucore title
     *  type can be used to define sub-properties to optionally refine the category
     *  of the title.All value of the EBU title status classification scheme
     *  (http://www.ebu.ch/metadata/cs/web/ebu_TitleStatusCodeCS_p.xml.htm)
     *  are candidates subproperties of the title property as implemented for an example
     *  with alternativeTitle.
     */
    public static final Property title = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#title" );

    /** To provide a definition associated to a Track. */
    public static final Property trackDefinition = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#trackDefinition" );

    /** The name attributed to a Track. */
    public static final Property trackName = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#trackName" );

    /** A translated version of the title. */
    public static final Property translationTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#translationTitle" );

    /** An alternative title specific to a verison of content. */
    public static final Property versionTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#versionTitle" );

    /** The width of e.g. a video frame typically expressed as a number of pixels,
     *  or picture/image in millimeters.
     */
    public static final Property width = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#width" );

    /** The unit used to measure a width e.g. in pixels or number of lines or millimeters
     *  or else.
     */
    public static final Property widthUnit = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#widthUnit" );

    /** The number of words contained in a document. */
    public static final Property wordCount = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#wordCount" );

    /** A title used while content is not complete. */
    public static final Property workingTitle = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#workingTitle" );

    /** To provide additional information on the wrapping type of ancillary data. */
    public static final Property wrappingType = createProperty(
            "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#wrappingType" );

}
