<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd">
    
    <bean name="propertiesURI" class="java.lang.System" factory-method="getProperty">
        <constructor-arg index="0" value="server.properties.uri"/>
        <!-- property name for properties URI location -->
        <constructor-arg index="1" value="classpath:server.properties"/>
        <!-- default location for testing -->
    </bean>
    <bean id="serverProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <ref bean="propertiesURI"/>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false"/>
    </bean>
    
    <bean id="injectedCdrVersion" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="edu.unc.lib.boxc.model.api.SoftwareAgentConstants.setCdrVersion" />
        <property name="arguments">
            <list>
                <value>5.0</value>
            </list>
        </property>
    </bean>
  
    <!-- a pooling based JMS provider -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL"> 
                    <value>${jms.brokerUrl}</value>
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"
        destroy-method="destroy">
        <constructor-arg ref="poolConfig"/>
        <constructor-arg type="String" value="${redis.host:localhost}" />
        <constructor-arg type="int" value="${redis.port:6379}" />
    </bean>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="15"/>
        <property name="minIdle" value="2"/>
        <property name="maxTotal" value="25"/>
    </bean>
    
    <bean id="jesqueConfig" class="net.greghaines.jesque.Config">
        <constructor-arg value="${redis.host:localhost}" type="java.lang.String" />
        <constructor-arg value="${redis.port:6379}" type="int" />
        <constructor-arg value="2000" type="int" />
        <constructor-arg type="java.lang.String">
            <null />
        </constructor-arg>
        <constructor-arg value="resque" type="java.lang.String" />
        <constructor-arg value="0" type="int" />
    </bean>
    
    <bean id="jesqueClient" class="net.greghaines.jesque.client.ClientPoolImpl"
        scope="prototype">
        <constructor-arg ref="jesqueConfig" />
        <constructor-arg ref="jedisPool" />
    </bean>
    
    <bean id="moveObjectsService"
        class="edu.unc.lib.boxc.operations.impl.move.MoveObjectsService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="objectPathFactory" ref="objectPathFactory" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
        <property name="asynchronous" value="true" />
        <property name="moveExecutor" ref="moveExecutor" />
    </bean>
    
    <bean id="destroyObjectsJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.destroy.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="destroyObjectsService"
        class="edu.unc.lib.boxc.operations.jms.destroy.DestroyObjectsService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="jmsTemplate" ref="destroyObjectsJmsTemplate" />
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="operationsMessageSender" class="edu.unc.lib.boxc.operations.jms.OperationsMessageSender">
        <property name="jmsTemplate" ref="jmsTemplate" />
    </bean>
    
    <bean id="schematronValidator" class="edu.unc.lib.boxc.operations.impl.validation.SchematronValidator"
       init-method="loadSchemas">
        <property name="schemas">
            <map>
                <entry key="object-mods"
                    value="classpath:edu/unc/lib/boxc/operations/impl/validation/object-mods.sch" />
                <entry key="vocabularies-mods"
                    value="classpath:edu/unc/lib/boxc/operations/impl/validation/vocabularies-mods.sch" />
            </map>
        </property>
    </bean>
    
    <bean id="schemaFactory" class="edu.unc.lib.boxc.common.xml.SecureXMLFactory"
        factory-method="createSchemaFactory" scope="prototype">
    </bean>

    <bean id="modsSchema" class="edu.unc.lib.boxc.common.xml.SecureXMLFactory"
          factory-method="createSchema">
        <constructor-arg ref="schemaFactory" />
        <constructor-arg>
            <list>
                <value>/schemas/xml.xsd</value>
                <value>/schemas/xlink.xsd</value>
                <value>/schemas/mods-3-8.xsd</value>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="modsValidator" class="edu.unc.lib.boxc.operations.impl.validation.MODSValidator">
        <property name="schematronValidator" ref="schematronValidator" />
        <property name="modsSchema" ref="modsSchema" />
    </bean>
    
    <bean id="dataDir" class="java.lang.String">
        <constructor-arg value="${data.dir}"/>
    </bean>

    <bean id="moveExecutor" class="java.util.concurrent.Executors"
            factory-method="newFixedThreadPool" destroy-method="shutdownNow">
            <constructor-arg value="${services.move.workers:1}"/>
    </bean>
    
    <!-- Access related beans -->
    
    <bean name="patronPrincipalProvider" class="edu.unc.lib.boxc.web.common.auth.PatronPrincipalProvider"
            init-method="init">
        <property name="patronGroupConfigPath" value="${acl.patronPrincipalConfig.path}" />
    </bean>
    
    <bean name="storeUserAccessControlFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreUserAccessControlFilter">
        <property name="patronPrincipalProvider" ref="patronPrincipalProvider" />
    </bean>
    
    <bean name="storeAccessLevelFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreAccessLevelFilter">
        <property name="queryLayer" ref="queryLayer" />
        <property name="requireViewAdmin" value="true" />
        <property name="nonAdminRedirectUrl" value="/error/401.html" />
    </bean>
    
    <bean name="spoofShibbolethFilter" class="edu.unc.lib.boxc.web.common.auth.filters.SpoofShibbolethFilter">
        <property name="spoofEnabled" value="${spoofing.enabled:false}" />
        <property name="spoofEmailSuffix" value="${spoofing.emailSuffix:@localhost}" />
    </bean>
    
    <bean id="gaTrackingID" class="java.lang.String">
        <constructor-arg
            value="${google.trackingId}" />
    </bean>
    
    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
            destroy-method="shutdown">
    </bean>
    
    <bean id="analyticsTracker" class="edu.unc.lib.boxc.web.common.utils.AnalyticsTrackerUtil">
        <property name="gaTrackingID" ref="gaTrackingID" />
        <property name="solrSearchService" ref="unrestrictedSolrSearchService" />
        <property name="httpClientConnectionManager" ref="httpClientConnectionManager" />
        <property name="repositoryHost" value="${repository.host}" />
        <property name="matomoAuthToken" value="${matomo.authToken}" />
        <property name="matomoApiURL" value="${matomo.api.url}" />
        <property name="matomoSiteID" value="${matomo.site.id}" />
    </bean>
    
    <bean id="fedoraContentService" class="edu.unc.lib.boxc.web.common.services.FedoraContentService">
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="accessControlService" ref="aclService" />
    </bean>
    
    <bean id="addContainerService" class="edu.unc.lib.boxc.web.services.processing.AddContainerService">
        <property name="aclService" ref="aclService" />
        <property name="patronService" ref="patronAccessAssignmentService" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="storageLocationManager" ref="storageLocationManager" />
        <property name="updateDescriptionService" ref="updateDescriptionService" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>
    
    <bean id="editFilenameService" class="edu.unc.lib.boxc.operations.impl.edit.EditFilenameService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>

    <bean id="editTitleService" class="edu.unc.lib.boxc.operations.impl.edit.EditTitleService">
        <property name="aclService" ref="aclService" />
        <property name="repoObjLoader" ref="repositoryObjectLoader" />
        <property name="updateDescriptionService" ref="updateDescriptionService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
    </bean>
    
    <bean id="runEnhancementMessageSender" class="edu.unc.lib.boxc.operations.jms.MessageSender">
        <property name="jmsTemplate" ref="enhancementsJmsTemplate"/>
    </bean>

    <bean id="runEnhancementService" class="edu.unc.lib.boxc.web.services.processing.RunEnhancementsService">
        <property name="aclService" ref="aclService" />
        <property name="messageSender" ref="runEnhancementMessageSender" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="queryLayer" ref="queryLayer" />
    </bean>

    <bean id="enhancementsJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.enhancement.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="solrUpdateJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.solrupdate.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="solrIndexingMessageSender" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingMessageSender" >
        <property name="jmsTemplate" ref="solrUpdateJmsTemplate" />
    </bean>
    
    <bean id="solrIndexingService" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingService" >
        <property name="aclService" ref="aclService" />
        <property name="indexingMessageSender" ref="solrIndexingMessageSender" />
    </bean>
    
    <bean id="triplesUpdateJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.triplesupdate.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="triplesIndexingMessageSender" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingMessageSender" >
        <property name="jmsTemplate" ref="triplesUpdateJmsTemplate" />
    </bean>
    
    <bean id="triplesIndexingService" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingService" >
        <property name="aclService" ref="aclService" />
        <property name="indexingMessageSender" ref="triplesIndexingMessageSender" />
    </bean>
    
    <bean id="markForDeletionService" class="edu.unc.lib.boxc.operations.impl.delete.MarkForDeletionService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="sparqlUpdateService" ref="fedoraSparqlUpdateService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
  </bean>

  <bean id="setAsPrimaryObjectService" class="edu.unc.lib.boxc.web.services.processing.SetAsPrimaryObjectService" >
      <property name="aclService" ref="aclService" />
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="operationsMessageSender" ref="operationsMessageSender" />
  </bean>
  
  <bean id="versionedDatastreamService" class="edu.unc.lib.boxc.operations.impl.versioning.VersionedDatastreamService" >
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
      <property name="binaryTransferService" ref="binaryTransferService" />
      <property name="transactionManager" ref="transactionManager" />
  </bean>
  
  <bean id="updateDescriptionService" class="edu.unc.lib.boxc.operations.impl.edit.UpdateDescriptionService" >
      <property name="aclService" ref="aclService" />
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
      <property name="operationsMessageSender" ref="operationsMessageSender" />
      <property name="modsValidator" ref="modsValidator" />
      <property name="versionedDatastreamService" ref="versionedDatastreamService" />
  </bean>

    <bean id="editThumbnailService" class="edu.unc.lib.boxc.web.services.processing.ImportThumbnailService"
          init-method="init">
        <property name="aclService" ref="aclService" />
        <property name="messageSender" ref="runEnhancementMessageSender" />
        <property name="sourceImagesDir" value="${sourceImages.dir}" />
    </bean>
  
  <bean id="exportXmlJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
      <property name="connectionFactory" ref="jmsFactory" />
      <property name="defaultDestinationName" value="${cdr.exportxml.stream}" />
      <property name="pubSubDomain" value="false" />
  </bean>
  
  <bean id="exportXmlRequestService" class="edu.unc.lib.boxc.operations.jms.exportxml.ExportXMLRequestService" >
      <property name="jmsTemplate" ref="exportXmlJmsTemplate"/>
  </bean>
  
  <bean id="importXmlJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
      <property name="connectionFactory" ref="jmsFactory" />
      <property name="defaultDestinationName" value="${cdr.importxml.stream}" />
      <property name="pubSubDomain" value="false" />
  </bean>
  
  <bean id="xmlImportService" class="edu.unc.lib.boxc.operations.impl.importxml.ImportXMLService"
        init-method="init">
      <property name="dataDir" ref="dataDir" />
      <property name="jmsTemplate" ref="importXmlJmsTemplate"/>
  </bean>
  
    <bean id="fromAddress" class="java.lang.String">
        <constructor-arg value="${repository.from.email}" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host:localhost}" />
        <property name="port" value="${smtp.port:25}" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="derivativeService" class="edu.unc.lib.boxc.model.fcrepo.services.DerivativeService">
        <property name="derivativeDir" value="${derivative.dir}" />
    </bean>
   
    <bean id="derivativeContentService" class="edu.unc.lib.boxc.web.common.services.DerivativeContentService">
        <property name="accessControlService" ref="aclService" />
        <property name="derivativeService" ref="derivativeService" />
    </bean>
    
    <bean id="staffRoleAssignmentService" class="edu.unc.lib.boxc.operations.impl.acl.StaffRoleAssignmentService">
        <property name="aclService" ref="aclService" />
        <property name="aclFactory" ref="uncachedInheritedAclFactory" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>
    
    <bean id="patronAccessOperationTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.patron.access.assignment.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="patronAccessOperationSender" class="edu.unc.lib.boxc.operations.impl.acl.PatronAccessOperationSender">
        <property name="jmsTemplate" ref="patronAccessOperationTemplate"/>
    </bean>
    
    <bean id="patronAccessAssignmentService" class="edu.unc.lib.boxc.operations.impl.acl.PatronAccessAssignmentService">
        <property name="aclService" ref="aclService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>

    <bean id="memberOrderCsvExporter" class="edu.unc.lib.boxc.web.services.processing.MemberOrderCsvExporter">
        <property name="aclService" ref="aclService" />
        <property name="solrSearchService" ref="queryLayer" />
    </bean>

    <bean id="memberOrderCsvTransformer" class="edu.unc.lib.boxc.web.services.processing.MemberOrderCsvTransformer">
    </bean>

    <bean id="importMemberOrderJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.ordermembers.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="memberOrderRequestSender" class="edu.unc.lib.boxc.operations.jms.order.MemberOrderRequestSender">
        <property name="jmsTemplate" ref="importMemberOrderJmsTemplate"/>
    </bean>
    
    <bean id="binaryTransferService" class="edu.unc.lib.boxc.persist.impl.transfer.BinaryTransferServiceImpl">
        <property name="storageLocationManager" ref="storageLocationManager" />
    </bean>
    
    <bean id="storageLocationManager" class="edu.unc.lib.boxc.persist.impl.storage.StorageLocationManagerImpl"
            init-method="init">
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="pathFactory" ref="contentPathFactory" />
        <property name="configPath" value="${storageLocations.path}" />
        <property name="mappingPath" value="${storageLocationMappings.path}" />
    </bean>
    
    <bean id="exportCsvService" class="edu.unc.lib.boxc.web.services.processing.ExportCsvService">
        <property name="childrenCountService" ref="childrenCountService"/>
        <property name="aclService" ref="aclService"/>
        <property name="queryLayer" ref="queryLayer"/>
    </bean>

    <bean id="facetValuesService" class="edu.unc.lib.boxc.search.solr.services.FacetValuesService"
          init-method="initializeSolrServer">
        <property name="searchSettings" ref="searchSettings" />
        <property name="searchService" ref="queryLayer" />
        <property name="facetFieldFactory" ref="facetFieldFactory" />
        <property name="accessRestrictionUtil" ref="solrAccessRestrictionUtil" />
        <property name="solrSettings" ref="solrSettings" />
    </bean>

    <bean id="downloadImageService" class="edu.unc.lib.boxc.web.services.processing.DownloadImageService">
        <property name="iiifBasePath" value="${iiif.base.url}"/>
    </bean>

    <bean id="thumbnailRequestJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.thumbnails.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="thumbnailRequestSender" class="edu.unc.lib.boxc.operations.jms.thumbnails.ThumbnailRequestSender">
        <property name="jmsTemplate" ref="thumbnailRequestJmsTemplate"/>
    </bean>

    <bean id="iiifV3ManifestService" class="edu.unc.lib.boxc.web.services.processing.IiifV3ManifestService">
        <property name="baseIiifv3Path" value="${services.api.url}iiif/v3/"/>
        <property name="baseAccessPath" value="${repository.protocol}://${repository.host}/"/>
        <property name="baseServicesApiPath" value="${services.api.url}"/>
        <property name="accessControlService" ref="aclService"/>
        <property name="accessCopiesService" ref="accessCopiesService"/>
    </bean>

    <bean id="imageServerProxyService" class="edu.unc.lib.boxc.web.services.processing.ImageServerProxyService">
        <property name="imageServerProxyBasePath" value="${iiif.imageServer.base.url}"/>
        <property name="httpClientConnectionManager" ref="httpClientConnectionManager" />
    </bean>
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="edu.unc.lib.boxc.web.common.utils.SerializationUtil.injectSettings"/>
        <property name="arguments">
            <list>
                <ref bean="searchSettings"/>
                <ref bean="solrSettings"/>
                <ref bean="globalPermissionEvaluator" />
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="${file.max.uploadSize}"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>
