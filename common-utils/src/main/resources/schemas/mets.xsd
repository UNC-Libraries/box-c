<?xml version="1.0" encoding="UTF-8"?>
<!-- METS: Metadata Encoding and Transmission Standard -->
<!-- Copyright © 2001, 2002, 2003, 2004, 2005, 2006 Digital Library Federation -->
<!-- Prepared for the Digital Library Federation by Jerome McDonough, New York University,
with the assistance of Michael Alexander (British Library), Rick Beaubien (University of California), Morgan Cundiff (Library of Congress), Susan Dahl (University of Alberta), Markus Enders (State and University Library, Göttingen),  Richard Gartner (Bodleian Library at Oxford), Nancy Hoebelheirich (Stanford University), Mark Kornbluh (Michigan State University), Cecilia Preston (Preston & Lynch), Merrilee Proffitt (Research Libraries Group), Richard Rinehart (Berkeley Art Museum/Pacific Film Archive), Mackenzie Smith (Massachusetts Institute of Technology), Taylor Surface (OCLC), Brian Tingle (California Digital Library) and Robin Wendler (Harvard University).
-->
<!-- October 2007 -->
<!-- Version 1.7 -->
<!-- Change History -->
<!-- April 23, 2001: Alpha Draft completed -->
<!-- June 7, 2001: Beta completed -->
<!-- 6/7/2001 Beta Changes: 
	1. add 'Time' as a possible time code value, as well as TCF.
	2. Make dmdSec ID attribute required; make ID attribute optional on MDRef/MDWrap.
	3. Add 'Label' attribute to StructMap, along with 'Type'.
	4. Add DDI and FGDC as potential metadata schemes to enumeration.
	5. Enable an "otherMDtype" attribute for MDWrap/MDRef and any other element where
	    there's an 'other' in the enumerated possibilities.
	6. Add a "profile" attribute to METS element.
	7. Revised mptr declaration so that it's like FLocat/MDRef (and not like XLink)
	8. Extend internal documentation of <area> attributes.
	9. Add "other" to the possible set of LOCTYPEs.
	10. Change ADMIDS to ADMID on FileGrp.
	11. Change "N" to "Order" on <div> element.
	12. Change "Number" to "order label" on <div> element
	13. Add createdate and lastmoddate attributes to mets element.
	14. Allow <div> and <area> elements to link to administrative metadata sections.
	15. Normalize attribute pointing facilities for file element and mdRef.
	16. Provide a LOCTYPE of "other" and an "otherloctype" attribute for pointing to external files.
	17. Drop PDI from enumeration of LOCTYPES.
	18. Make MDTYPE required in mdRef and mdWrap.
	19. Rename preservationMD to digiprovMD.
	20. Add optional CHECKSUM attribute to FContent element.
	21. Modularize declarations of fileGrpType and mdSecType attributes and enumerations to
		simplify maintenance.
	22. Add TYPE attribute to structMap.
	23. Declare structMap element using structMapType rather than direct declaration.
	24. Add area element as possible subelement to <div>, along with par and seq.
	25. Change mdSec model to ALL, to enable differing order of mdRef/mdWrap elements.
	26. Extend documentation on <par> and <seq> elements.
 -->
<!-- October 22, 2001: Gamma completed -->
<!-- 10/22/2001 Gamma changes:
 	1. Added optional fileSec element beneath METS root element to contain fileGrps.
 	2. Created subsidiary schema file xlink.xsd for XLink attributes, restored XLink attributes
 	to mptr element, and added XLink support to mdRef and FLocat.
 	3. Created new element metsHdr to handle metadata regarding METS document
 	itself (analogous to TEI Header).  Moved CREATEDATE and LASTMODDATE attributes
 	to metsHdr, and added new RECORDSTATUS attribute.  Added new subsidiary elements
 	agent and altRecordID to metsHdr.
 	4. Made CREATEDATE and LASTMODDATE attributes type xsd:dateTime to allow more precise
 	recording of when work was done.
 	5. Changed all attributes using data type of xsd:binary to xsd:base64Binary to conform to final
 	W3C schema recommendations.
 	6. Cleaned up annotations/documentation.
 -->
<!-- December 19, 2001: Epsilon and PROTOFINAL completed-->
<!-- 12/19/2001 Epsilon changes:
 	1. Changed sequence operator for StructMap so that only 1 root div element is permitted.
	2. Add new roles to agent element's role attribute and support for extensible 'other' role.
	3. Add support for extensible 'other' type attribute on agent element.
	4. Yet more documentation clean up.
	5. Relocate CHECKSUM attribute from FContent to File element.
	6. Change the file element's CREATED attribute and fileGroup's VERSDATE attribute to 
	a type of xsd:dateTime
	7. Change attribute name DMD for div element to DMDID for consistency's sake.
	8. Added new behaviorSec for support of referencing executable code from METS object
 -->
<!-- February 8, 2002: Zeta bug fix to final -->
<!-- 2/8/2002 Zeta changes:
 
 	1. Eliminated redundant VRA in metadata type enumeration.
 	2. Changed mdWrap content model, adding xmlData element to eliminate
 		ambiguous content model
 -->
<!-- June 3, 2002: Version 1.1 -->
<!-- 6/3/2002 v1.1 changes:
 
  	1. Add new structLink section for recording hyperlinks between media represented by structMap nodes.
	2. Allow a <par> element to
	contain a <seq> -->
<!-- Dec. 27, 2002: Version 1.2 -->
<!-- 12/27/2002 v1.2 changes:
1. Add “USE” attribute to FileGrp, File, FLocat and FContent;
2. Make FLocat repeatable;
3. Have FContent mimic mdWrap in using separate binData/xmlData sections;
4. Copyright statement added;
5. Allow both FLocat and Fcontent in single file element;
6. Allow behaviorSec elements to group through GROUPID attribute;
7. allow descriptive and administrative metadata sections to be grouped through GROUPID attribute;
8. allow <file> element to point to descriptive metadata via DMDID attribute;
9. allow descriptive metadata and all forms of administrative metadata to point to administrative metadata via ADMID attribute;
10. CREATED and STATUS attributes added to all desc. and adm. metadata sections; and
11. clean up documentation in elements to reflect reality.
-->
<!-- May 8, 2003: Version 1.3 -->
<!-- 05/05/2003 v1.3 changes:

1. Change “2. OBJID: a primary identifier assigned to the original source document” to “2. OBJID: a primary identifier assigned to the METS object.”
2. Add MODS to MDTYPEs.
3. Modify <file> attributes so that instead of just CHECKSUM we have CHECKSUM and CHECKSUMTYPE, where CHECKSUMTYPE is a controlled vocabulary as follows:
     HAVAL, MD5, SHA-1, SHA-256, SHA-384, SHA-512, TIGER, WHIRLPOOL
4.Alter BehaviorSec to make it recursive, and add a new behavior element to wrap mechanism and interfaceDef elements.
-->
<!-- May 1, 2004: Version 1.4 -->
<!-- 05/01/2003 v1.4 changes:

1. Moved attribute documentation out of element documentation
(thank you, Brian Tingle).
2. New CONTENTIDS attribute (and URIs simpleType) added to div, fptr,
mptr and area elements for mapping MPEG21 DII Identifier values
3. XLink namespace URI changed to conform with XLink recommendation.
4. ID Attribute added to FContent.
5. ID Attribute addedt to structLink.
6. ID Attribute added to smLink.
7. "LOM" added as metadata type.
 -->
 <!-- April 12, 2005: Version 1.5 -->
 <!-- 04/12/2005 v1.5 changes:
 
 1. Made file element recursive to deal with PREMIS Onion Layer model and
 support XFDU-ish unpacking specification.
 2. Add <stream> element beneath <file> to allow linking of metadata to
 subfile structures.
 3. Modify structLink TO and FROM attributes to put them in XLink namespace.
 4. Make processContents "lax" for all xsd:any elements.
 -->
 <!-- October 18, 2006: Version 1.6 -->
 <!-- 10/18/2006 v1.6 changes:
 	
 1. add ID to stream and transformFile
 2. add ADMID to metsHdr
 3. make smLink/@xlink:to and smLink/@xlink:from required
 -->
<!-- October 16, 2007: Version 1.7 -->
<!-- 10/16/2007 v 1.7 changes:
	
1. create parType complex type to allow a seq to contain a par
2. create FILECORE attribute group with MIMETYPE, SIZE, CHECKSUM, CHECKSUMTYPE;
     change fileType, mdWrapType and mdRefType use the attribute group, so mdType and mdRef end
     up with new SIZE, CHECKSUM, and CHECKSUMTYPE attributes (file does not change)
-->
<xsd:schema targetNamespace="http://www.loc.gov/METS/" xmlns="http://www.loc.gov/METS/" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="http://www.loc.gov/standards/xlink/xlink.xsd"/>
	
	<xsd:element name="mets">
		<xsd:annotation>
			<xsd:documentation>METS: Metadata Encoding and Transmission Standard.
			METS is intended to provide a standardized XML format for transmission of complex digital library objects between systems.  As such, it can be seen as filling a role similar to that defined for the Submission Information Package (SIP), Archival Information Package (AIP) and Dissemination Information Package (DIP) in the Reference Model for an Open Archival Information System.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="metsType"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="metsType">
		<xsd:annotation>
			<xsd:documentation>mets Complex Type.
			A METS document consists of seven possible subsidiary sections: metsHdr (METS document header), dmdSec (descriptive metadata section), amdSec (administrative metadata section), fileGrp (file inventory group), structLink (structural map linking), structMap (structural map) and behaviorSec (behaviors section).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="metsHdr" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>metsHdr: METS Header. 
					Like a TEI Header, the METS Header element records metadata about the METS document itself (not the digital library object that the METS document encodes).  It has two possible subsidiary elements, agent (document agent) and altRecordID	(alternative Record ID)..
			</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="agent" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>agent: METS agent.
								The agent element allows for various parties and their roles with respect to the METS document to be recorded.  
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>name:The full name of the METS document agent.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="note" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>note: Any additional information regarding the agent's activities with respect to the METS document.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="ID" type="xsd:ID" use="optional">
									<xsd:annotation>
										<xsd:documentation>ID: an optional XML ID
										</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attribute name="ROLE" use="required">
									<xsd:annotation>
										<xsd:documentation>ROLE: a required attribute specifying the role played by the agent with respect to the METS object.  ROLE must have one of the following seven values:
CREATOR: an agent responsible for creating the METS document
EDITOR: an agent responsible for editing the METS document
ARCHIVIST: an agent with archival responsibility for the METS document and/or the original sources used to create the METS object
PRESERVATION: an agent responsible for preserving the METS object and/or the original sources used to create the METS object
DISSEMINATOR: an agent responsible for distributing or publishing the METS object
CUSTODIAN: an agent with custodial responsibility for the METS object
IPOWNER: an agent with intellectual property rights in the METS object or some of its components.
OTHER: an agent with other rights/responsibilities with respect to the METS object not set forth above.
										</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:enumeration value="CREATOR"/>
											<xsd:enumeration value="EDITOR"/>
											<xsd:enumeration value="ARCHIVIST"/>
											<xsd:enumeration value="PRESERVATION"/>
											<xsd:enumeration value="DISSEMINATOR"/>
											<xsd:enumeration value="CUSTODIAN"/>
											<xsd:enumeration value="IPOWNER"/>
											<xsd:enumeration value="OTHER"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
								<xsd:attribute name="OTHERROLE" type="xsd:string" use="optional">
									<xsd:annotation>
										<xsd:documentation>OTHERROLE:
											  an optional string attribute to specify the particular role an agent plays with respect to a METS object or its sources, to be used if the ROLE attribute has a value of OTHER.
										</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attribute name="TYPE" use="optional">
									<xsd:annotation>
										<xsd:documentation>TYPE: an optional attribute to specify the nature of the agent acting with respect to the METS object.  It can take one of three values:
INDIVIDUAL: a single, human agent
ORGANIZATION: a collective entity
OTHER: some other form of agent (e.g., a software agent)
										</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:enumeration value="INDIVIDUAL"/>
											<xsd:enumeration value="ORGANIZATION"/>
											<xsd:enumeration value="OTHER"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
								<xsd:attribute name="OTHERTYPE" type="xsd:string" use="optional">
									<xsd:annotation>
										<xsd:documentation>OTHERTYPE: an optional string to indicate the particular type of agent, to be used if a value of OTHER is indicated in the agent's TYPE attribute.
										</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="altRecordID" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>altRecordID: Alternative Record ID.  
								This element allows for documentation of alternative ID values for the METS document in addition to the primary ID stored in the OBJID attribute in the root METS element.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="xsd:string">
										<xsd:attribute name="ID" type="xsd:ID" use="optional">
											<xsd:annotation>
												<xsd:documentation>ID: an optional XML ID value
												</xsd:documentation>
											</xsd:annotation>
										</xsd:attribute>
										<xsd:attribute name="TYPE" type="xsd:string" use="optional">
											<xsd:annotation>
												<xsd:documentation>TYPE: an optional string describing the type of identifier (e.g., OCLC #, LCCN, etc.).
												</xsd:documentation>
											</xsd:annotation>
										</xsd:attribute>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
						<xsd:annotation>
							<xsd:documentation>ADMID: an optional attribute providing the XML ID values for the administrative metadata sections within this METS document applicable to this METS Document.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CREATEDATE" type="xsd:dateTime" use="optional">
						<xsd:annotation>
							<xsd:documentation>CREATEDATE: an optional dateTime specifying  when the METS document was created.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="LASTMODDATE" type="xsd:dateTime" use="optional">
						<xsd:annotation>
							<xsd:documentation>LASTMODDATE: an optional dateTime specifying when the METS document was last modified;
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="RECORDSTATUS" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>RECORDSTATUS: an optional string indicating the status of the METS document, to be used mainly for internal processing purposes.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="dmdSec" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>dmdSec: Description Metadata Section.
					This section records all of the descriptive metadata for all items in the METS object (including both structural map divs and descriptive metadata for data files).  Metadata can be either included in the METS hub document (mdWrap) or referenced via an identifier/locator (mdRef), a la Warwick Framework.  Multiple dmdSec elements are allowed so that descriptive metadata can be recorded for each separate item within the METS object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="amdSec" type="amdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>amdSec: Administrative Metadata Section.
					This section records all of the administrative metadata for all items in the METS object (including structural map divs, data files, descriptive metadata sections and adminstrative metadata sections themselves), 	and is divided into four subsections: techMD (technical metadata), rightsMD (intellectual property rights metadata), sourceMD (analog/digital source metadata), and digiprovMD (digital provenance metadata).  Each of these subsections follows the mdSecType model, so that they can either include metadata within the METS hub document (mdWrap) or reference it via an identifier/locator (mdRef).  Multiple techMD, rightsMD, sourceMD and digiprovMD elements are allowed so that administrative metadata can be recorded for each separate item within the METS object.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fileSec" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>fileSec: Content File Section. 
					The content file section records information regarding all of the data files which comprise the digital library object.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="fileGrp" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>fileGrp: File Group
								This element allows for the grouping of content files into sets (all of the master images for a work, all of the images	for a particular page, etc.).
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="fileGrpType"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="structMap" type="structMapType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>structMap: Structural Map.
					The structural map is the heart of a METS document, defining the hierarchical arrangement of a primary source document which has been digitized.  This hierarchy is encoded as a tree of 'div' elements.  Any given 'div' can point to another METS document via the 'mptr' element, or to a single file, to a group of files, or to segments of individual files or groups of files through the 'fptr' and subsidiary elements.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="structLink" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>structLink: Structural Map Linking.
						The Structural Map Linking section allows for the specification of hyperlinks between different components of a METS structure delineated in a structural map.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="structLinkType"/>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="behaviorSec" type="behaviorSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>behaviorSec: Behavior Section.  This section records executable 	behaviors that are associated with content in the METS object.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="OBJID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>OBJID: an optional attribute recording a primary identifier assigned to the METS document.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional attribute providing a title/text string identifying the document for users.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>TYPE: an optional string attribute describing the type of object, e.g., book, journal, stereograph, etc.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="PROFILE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>PROFILE: an optional attribute providing a URI or other identifier for a METS profile to which  this METS document conforms.
			</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="amdSecType">
		<xsd:annotation>
			<xsd:documentation>amdSecType: Complex Type for Administrative Metadata.
			The administrative metadata section consists of four possible subsidiary sections: techMD (technical metadata for text/image/audio/video files), rightsMD (intellectual property rights metadata), sourceMD (analog/digital source metadata), and digiprovMD (digital provenance metadata, that is, the history of migrations/translations performed on a digital library object from it's original digital capture/encoding).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="techMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>techMD: technical metadata.  
						The techMD element provides a wrapper around a generic metadata section,  which should contain technical metadata regarding a file or files.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rightsMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>rightsMD: intellectual property rights metadata.  
						The rightsMD element provides a wrapper around a generic metadata section,  which should contain IP rights metadata.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="sourceMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>sourceMD: source metadata.  
						The sourceMD element provides a wrapper around a  generic metadata section  which should contain descriptive or administrative metadata regarding the original source materials used to create the METS object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="digiprovMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>digiprovMD: digital provenance metadata.
						The digiprovMD element provides a wrapper around a generic metadata section, which should contain information regarding the ultimate origin of a digital object and the derivation of its current elements.  This includes recording master/derivative relationships between various files which currently represent the object, as well recording any transformations or migrations undergone by files composing the digital object subsequent to the initial digitization of an item or, in the case of born digital materials, the files' creation.  In short, digiprovMD should be used to record information to allow both archival/library staff and scholars to understand what modifications have been performed to a digital object during its life cycle in order to judge how those processes might have altered or corrupted the object's ability to accurately represent the original item.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="fileGrpType">
		<xsd:annotation>
			<xsd:documentation>fileGrp: File Group.
					The file group is used to cluster all of the digital files composing a digital library object in a hierarchical arrangement (fileGrp is recursively defined to enable the creation of the hierarchy).  Any file group may contain zero or more file elements.  File elements in turn can contain one or more FLocat elements (a pointer to a file containing content for this object) and/or a FContent element (the contents of the file, in either XML or  Base64 encoding).
				</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="fileGrp" type="fileGrpType" minOccurs="0" maxOccurs="unbounded"/>
			<!-- file element originally here -->
			<xsd:element name="file" minOccurs="0" maxOccurs="unbounded" type="fileType" />
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="VERSDATE" type="xsd:dateTime" use="optional">
			<xsd:annotation>
				<xsd:documentation>VERSDATE: an optional dateTime attribute specifying the date this version/fileGrp of the digital object was created.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute specifying the XML ID values for administrative metadata sections in the METS document that provide information applicable to all of the files in this particular file group.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="USE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>USE: an optional string attribute indicating the intended use of all the files within this file group (e.g., master, reference, thumbnails for image files).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="structMapType">
		<xsd:annotation>
			<xsd:documentation>structMap Complex Type
			The structural map (structMap) outlines a hierarchical structure for the original object being encoded, using a series of nested div elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="div" type="divType">
				<xsd:annotation>
					<xsd:documentation>div: Division.  
						The METS standard represents a document structurally as a series of nested div elements, that is, as a hierarchy (e.g., a book, which is composed of chapters, which are composed of subchapters, which are composed of text).  Every div node in the structural map hierarchy may be connected (via subsidiary mptr or fptr 	elements) to content files which represent that div's portion of the whole document.  
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>TYPE: an optional string attribute specifying the type of structural map provided.  Typical values will be &quot;PHYSICAL&quot; for a map which describes the physical composition of the original work (a series with individual monographs with pages) and &quot;LOGICAL&quot; for one which describes the intellectual structure of the work (a monograph with TOC, forward, chapters, index., etc.);
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional string attribute which may be used to describe the structMap to users.  This is primarily useful where more than one structMap is provided for a single object (e.g., both logical and physical structMap).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="divType">
		
		<xsd:annotation>
			<xsd:documentation>Div Complex Type
					The METS standard represents a document structurally as a series of nested div elements, that is, as a hierarchy (e.g., a book, which is composed of chapters, which are composed of subchapters, which are composed of text).  Every div node in the structural map hierarchy may be connected (via subsidiary mptr or fptr 	elements) to content files which represent that div's portion of the whole document.

SPECIAL NOTE REGARDING DIV ATTRIBUTE VALUES:
to clarify the differences between the ORDER, ORDERLABEL, and LABEL attributes for the &lt;div&gt; element, imagine a text with 10 roman numbered pages followed by 10 arabic numbered pages. Page iii would have an ORDER of &quot;3&quot;, an ORDERLABEL of &quot;iii&quot; and a LABEL of &quot;Page iii&quot;, while page 3 would have an ORDER of &quot;13&quot;, an ORDERLABEL of &quot;3&quot; and a LABEL of &quot;Page 3&quot;.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="mptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>mptr: METS Pointer.  
						The mptr element allows a div to be associated with a separate METS document  containing the content corresponding with that div, rather than pointing to an internal file or file group.  A typical instance of this would be the case of a METS document for a journal run, with a div elements for each individual journal issue.  The div elements for the issues might point to separate METS documents for each issue, rather than having files and file groups for every issue encoded in one document.
NOTE: mptr is an empty element.  The location of the resource	pointed to MUST be stored in the xlink:href attribute.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="LOCATION"/>
					<xsd:attributeGroup ref="xlink:simpleLink"/>
				    <xsd:attribute name="CONTENTIDS" type="URIs" use="optional">
			            <xsd:annotation>
				            <xsd:documentation>CONTENTIDS: Content IDs for this division (equivalent to DIDL DII)
				            </xsd:documentation>
			            </xsd:annotation>
               	    </xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="fptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>fptr: File Pointer.  
						The fptr element associates a div element with content files that represent that div.    It can either point to a file directly itself, via the FILEID attribute, or it can do more complex links to content via the subsidiary area, par and seq elements.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="par" type="parType" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>par: Parallel  files.  
									The par element should used to link a div to a set of content files when those files should be played/displayed in unison to deliver the content to the user (e.g., displaying a text transcript simultaneously with playing an audio file).  A par element has two possible subsidiary elements, which should be used in different cases.  In cases where each bytestream to be played in parallel can fit in a single file, you should use subsidiary &lt;area&gt; elements within the par element to point to those files.  However, in some cases, bytestreams which should be played in parallel are too large to fit in a single file (high quality multi-track audio, or video).  In those cases, you should use subsidiary	&lt;seq&gt; elements, where each &lt;seq&gt; contains the files comprising	a particular bytestream in the order they should be played back.  So, for example, in the case where you had an audio recording which had to be split into three different, sequential files, and a text transcription	of the recording in a single file, you would use a par element containing two seq elements.  The first seq element would contain three area elements, one for each audio file; the second seq element would contain a single area element, for the text transcription file.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="seq" type="seqType" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>seq: Sequence of files.  
								The seq element should be used to link a div to a set of content files when those files should be played/displayed sequentially to deliver content to a user.  See the seqType documentation for more details.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="area" type="areaType" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>area: file area
									The area element provides for more sophisticated linking between a div  element and content files representing that div, be they text, image, audio, or video files.  An area element can link a div to a point within a file, to a one-dimension segment of a file (e.g., text screen,  image line, audio/video clip), or a two-dimensional section of a file (e.g, subsection of an image, or a subsection of the  video display of a video file.  See the areaType documentation for more details.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="FILEID" type="xsd:IDREF" use="optional">
						<xsd:annotation>
							<xsd:documentation>FILEID: an IDREF to the file element which corresponds with the div containing this ftpr.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				    <xsd:attribute name="CONTENTIDS" type="URIs" use="optional">
			            <xsd:annotation>
				            <xsd:documentation>CONTENTIDS: Content IDs for this division (equivalent to DIDL DII)
				            </xsd:documentation>
			            </xsd:annotation>
               	    </xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="div" type="divType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ORDER" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>ORDER: an optional integer representation of this div's order among its siblings (e.g., its sequence).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ORDERLABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>ORDERLABEL: an optional string representation of this div's  order among its siblings (e.g., &quot;xii&quot;), or a non-integer native numbering system.  It is presumed that this value will still be machine-actionable (e.g., supports a page 'go to' function), and is not a replacement/substitute for the LABEL attribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional string label to describe this div to an end user viewing the document, as per a table of contents entry (NB: a div LABEL should be specific to its level in the structural map.  In the case of a book with chapters, the book div LABEL should have the book title, and the chapter div LABELS should have the individual chapter titles, rather than having the chapter div LABELs combine both book title and chapter title).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="DMDID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>DMDID: an optional attribute providing the XML ID values for the descriptive metadata sections within this METS document applicable to this div.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute providing the XML ID values for the administrative metadata sections within this METS document applicable to this div.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>TYPE: an optional string attribute for specifying a type of division (e.g., chapter, article, page, etc.).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	    <xsd:attribute name="CONTENTIDS" type="URIs" use="optional">
			<xsd:annotation>
				<xsd:documentation>CONTENTIDS: Content IDs for this division (equivalent to DIDL DII)
				</xsd:documentation>
			</xsd:annotation>
	    </xsd:attribute>
		<xsd:attribute ref="xlink:label">
			<xsd:annotation>
				<xsd:documentation>xlink:label - an xlink label to be referred to by an smLink element</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="parType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="area" type="areaType" minOccurs="0"/>
			<xsd:element name="seq" type="seqType" minOccurs="0"/>
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="seqType">
		<xsd:annotation>
			<xsd:documentation>seq: Sequence of files.  
					The seq element should be used to link a div to a set of content files when those files should be played/displayed sequentially to deliver content to a user.  Individual &lt;area&gt; subelements within the seq element provide the links to the files or portions thereof.
				</xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="area" type="areaType" minOccurs="0"/>
			<xsd:element name="par" type="parType" minOccurs="0"/>
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="areaType">
		<xsd:annotation>
			<xsd:documentation>areaType: Complex Type for Area linking.
				The area element provides for more sophisticated linking between a div element and content files representing that div, be they text, image, audio, or video files.  An area element can link a div to a point within a file, to a one-dimension segment of a file (e.g., text segment, image line, audio/video clip), or a two-dimensional section of a file 	(e.g, subsection of an image, or a subsection of the  video display of a video file.  The area element has no content; all information is recorded within its various attributes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="FILEID" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>FILEID: a mandatory IDREF to the file element being pointed to by the div.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SHAPE" use="optional">
			<xsd:annotation>
				<xsd:documentation>SHAPE: an optional string attribute defining the shape of a two-dimensional area being referenced within a linked content file.  It must have one of the following values:
RECT: rectangular area
CIRCLE: a circular area
POLY: an irregular polygon.
The SHAPE attribute should be used as in HTML 4.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="RECT"/>
					<xsd:enumeration value="CIRCLE"/>
					<xsd:enumeration value="POLY"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="COORDS" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>COORDS: an optional string attribute listing a set of visual  coordinates within an image (still image or video frame).  The COORDS attribute should be used as in HTML 4.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="BEGIN" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>BEGIN: an optional string attribute specifying the beginning location for a subpart of the referenced file.  Used with the END attribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="END" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>END: an optional string attribute specifying the ending location for a subpart of the referenced file.  Used with the BEGIN attribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="BETYPE" use="optional">
			<xsd:annotation>
				<xsd:documentation>BETYPE: Begin/End Type.
					An optional attribute specifying the syntax used in the values recorded in the 	BEGIN and END attributes.  It must have one of the following values:
BYTE: a byte offset
IDREF: an XML ID value for an element in the content file
SMIL: a SMIL	time value
MIDI: a MIDI time code
SMPTE-25: SMPTE time code for 25 frame/second material
SMPTE-24: SMPTE time code for 24 frame/second material
SMPTE-DF30: SMPTE time code for 30 frame/second drop frame material
SMPTE-NDF30: SMPTE time code for 30 frame/second non-drop frame material
SMPTE-DF29.97: SMPTE time code for 29.97 frame/second drop frame material
SMPTE-NDF29.97: SMPTE time code for 29.97 frame/second non-drop frame material
TIME: a simple time code of the form	HH:MM:SS
TCF: a Time code Character Format value
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="BYTE"/>
					<xsd:enumeration value="IDREF"/>
					<xsd:enumeration value="SMIL"/>
					<xsd:enumeration value="MIDI"/>
					<xsd:enumeration value="SMPTE-25"/>
					<xsd:enumeration value="SMPTE-24"/>
					<xsd:enumeration value="SMPTE-DF30"/>
					<xsd:enumeration value="SMPTE-NDF30"/>
					<xsd:enumeration value="SMPTE-DF29.97"/>
					<xsd:enumeration value="SMPTE-NDF29.97"/>
					<xsd:enumeration value="TIME"/>
					<xsd:enumeration value="TCF"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="EXTENT" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>EXTENT: an optional string attribute specifying the duration of the segment pointed to by the area element.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="EXTTYPE" use="optional">
			<xsd:annotation>
				<xsd:documentation>EXTTYPE: Extent Type
					an option attribute specifying the syntax used for the value in the EXTENT attribute.  See the BETYPE attribute for the specific values which may be used in EXTTYPE.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="BYTE"/>
					<xsd:enumeration value="SMIL"/>
					<xsd:enumeration value="MIDI"/>
					<xsd:enumeration value="SMPTE-25"/>
					<xsd:enumeration value="SMPTE-24"/>
					<xsd:enumeration value="SMPTE-DF30"/>
					<xsd:enumeration value="SMPTE-NDF30"/>
					<xsd:enumeration value="SMPTE-DF29.97"/>
					<xsd:enumeration value="SMPTE-NDF29.97"/>
					<xsd:enumeration value="TIME"/>
					<xsd:enumeration value="TCF"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute listing the XML ID values for the administrative metadata sections within the METS document that provide information regarding this area.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	    <xsd:attribute name="CONTENTIDS" type="URIs" use="optional">
			<xsd:annotation>
				<xsd:documentation>CONTENTIDS: Content IDs for this division (equivalent to DIDL DII)
				</xsd:documentation>
			</xsd:annotation>
	    </xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="structLinkType">
		<xsd:annotation>
			<xsd:documentation>structLink: Structural Map Linking.
				The Structural Map Linking section allows for the specification of hyperlinks between different components of a METS structure delineated in a structural map.  structLink contains a single, repeatable element, smLink.  Each smLink element indicates a hyperlink between two nodes in the structMap.  The structMap nodes recorded in smLink are identified using their XML ID attribute	values.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="smLink" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>smLink: structural map Link
					An element linking two elements in the structural map, used to indicate that a hyperlink exists between the two METS components represented by the two structural map nodes.  You would use smLink, for example, to record the existence of hypertext links between web pages, if you wish to record those links' existence inside of METS.
				</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:arcrole" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								 xlink:arcrole - the role of the link, as per the xlink specification.  See http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:title" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								xlink:title - a title for the link (if needed), as per the xlink specification.  See http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:show" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								xlink:show - see the xlink specification at http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:actuate" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								xlink:actuate - see the xlink specification at http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:to" use="required">
						<xsd:annotation>
							<xsd:documentation>
								xlink:to - the value of the label for the element in the structMap you are linking to.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:from" use="required">
						<xsd:annotation>
							<xsd:documentation>
								xlink:from - the value of the label for the element in the structMap you are linking from.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="behaviorSecType">
		<xsd:annotation>
			<xsd:documentation>behaviorSecType: Behaviors Section.
			Behaviors are executable code which can be associated with parts of a METS object.  The behaviorSec element is used to group individual behaviors within a hierarchical structure.  Such grouping can be useful to organize families of behaviors together or to indicate other relationships between particular behaviors.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="behaviorSec" type="behaviorSecType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="behavior" type="behaviorType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CREATED" type="xsd:dateTime" use="optional">
			<xsd:annotation>
				<xsd:documentation>CREATED: an optional dateTime attribute specifying when the behaviorSec was created.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional string attribute providing a text description of the behaviorSec.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="behaviorType">
		<xsd:annotation>
			<xsd:documentation>behaviorType: Complex Type for Behaviors. 
			 A behavior can be used to associate executable behaviors with content in the METS object.  A behavior element has an interface definition element that represents an abstract definition  of the set  of behaviors represented by a particular behavior.  A behavior element also has an behavior  mechanism which is a module of executable code that implements and runs the behavior defined abstractly by the interface definition.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="interfaceDef" type="objectType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>interfaceDef: interface definition object. 
					The interface definition element contains a pointer an abstract definition of a set of  related behaviors.  These abstract behaviors can be associated with the content of a METS object.    The interface definition element will be a pointer to another object (an interface definition object).  An interface definition object could be another METS object, or some other entity (e.g., a WSDL file).  Ideally, an interface definition object should contain metadata that describes a set of behaviors or methods.  It may also contain files that describe the intended usage of the behaviors, and possibly files that represent different expressions of the interface definition.  The interfaceDef element is optional to allow for cases where an interface definition can be obtained from a behavior mechanism object (see the mechanism element of the behaviorSec). 			
			</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mechanism" type="objectType">
				<xsd:annotation>
					<xsd:documentation>mechanism: executable mechanism.  
					A mechanism element contains a pointer to an executable code module that  implements a set of behaviors defined by an interface definition.    The mechanism element will be a pointer to another object (a mechanism object).  A mechanism object could be another METS object, or some other entity (e.g., a WSDL file).  A mechanism object should contain executable code, pointers to executable code, or specifications for binding to network services (e.g., web services).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>ID: a required XML ID value for the element   
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="STRUCTID" type="xsd:IDREFS" use="required">
			<xsd:annotation>
				<xsd:documentation>STRUCTID: Structural Map IDS
					 IDREFS to structMap sections or divs within a structMap in the METS document.  The content that the STRUCTID attribute points to is considered &quot;input&quot; to the behavior mechanism (executable) defined for the behavior.  
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="BTYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>BTYPE: Behavior Type
					 an optional string attribute providing an identifier for a given set of related behaviors. 					</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CREATED" type="xsd:dateTime" use="optional">
			<xsd:annotation>
				<xsd:documentation>CREATED: an optional dateTime attribute specifying a date this behavior was created.  
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional string attribute providing a description of the behavior.  
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="GROUPID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>GROUPID: an optional string attribute providing an identifier that establishes a correspondence between this behavior and other behaviors.  Typically, this will be used to facilitate versioning of behaviors. 
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute listing the XML ID values of administrative metadata sections within the METS document pertaining to this behavior.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="objectType">
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>ID: an optional XML ID value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>LABEL: an optional string attribute providing a description of the object that is being linked to.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="LOCATION"/>
		<xsd:attributeGroup ref="xlink:simpleLink"/>
	</xsd:complexType>
	<xsd:complexType name="mdSecType">
		<xsd:annotation>
			<xsd:documentation>mdSec (metadata section) Complex Type
			A generic framework for pointing to/including metadata within a METS document, a la Warwick Framework.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="mdRef" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>mdRef: metadata reference.  
						The mdRef element is a generic element used throughout the METS schema to provide a pointer to metadata which resides outside the METS document.  NB: mdRef is an empty element.  The location of the metadata must be recorded in the xlink:href attribute, supplemented by the XPTR attribute as needed.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="LOCATION"/>
					<xsd:attributeGroup ref="xlink:simpleLink"/>
					<xsd:attributeGroup ref="METADATA"/>
					<xsd:attributeGroup ref="FILECORE"/>
					<xsd:attribute name="LABEL" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>LABEL: an optional string attribute providing a label to display to the viewer of the METS document identifying the metadata 
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="XPTR" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>XPTR: an optional string attribute for providing an xptr to a location within the file pointed to by the mdRef element, if applicable.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="mdWrap" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>mdWrap: metadata wrapper.  
						The mdWrap element is a generic element used throughout the METS schema  to  allow 	the encoder to place arbitrary metadata conforming to other standards/schema within a METS document.  The included metadata can either be encoded in XML, in which case it may be placed directly within the mdWrap element, or it can be Base64 encoded, and placed within a subsidiary binData element.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="binData" type="xsd:base64Binary" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>binData:
									A wrapper element to contain Base64 encoded metadata.												</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="xmlData" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>xmlData:
									A wrapper element to contain XML encoded metadata.												</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:any namespace="##any" maxOccurs="unbounded" processContents="lax"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="METADATA"/>
					<xsd:attributeGroup ref="FILECORE"/>
					<xsd:attribute name="LABEL" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>LABEL: an optional string attribute providing a label to display to the viewer of the METS document identifying the metadata.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>ID: a required XML ID value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="GROUPID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>GROUPID: an optional string attribute providing an identifier that may be used to indicate that different metadata sections may be considered as part of a single group.  Two metadata sections with the same GROUPID value are to be considered part of the same group.  This facility might be used, for example, to group changed versions of the same metadata if previous versions are maintained in a file for tracking purposes;
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute providing the XML ID attribute values for administrative metadata elements which apply to the current descriptive or administrative metadata.  Typically used to reference preservation metadata which applies to the current metadata.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CREATED" type="xsd:dateTime" use="optional">
			<xsd:annotation>
				<xsd:documentation>CREATED: an optional dateTime attribute specifying the date and time of creation for the metadata.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="STATUS" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>STATUS: an optional string attribute indicating the status of this metadata (e.g., superceded, current, etc.).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="fileType">
		<xsd:annotation>
			<xsd:documentation>file: File element.
				The file element provides access to content files for a METS object.  A file element may contain one or more FLocat elements, which provide pointers to a content file, and/or an FContent element, which wraps an encoded version of the file. Note that ALL FLocat and FContent elements underneath a single file element should identify/contain identical copies of a single file.
			</xsd:documentation>
		</xsd:annotation>
		
		<xsd:sequence>
			<xsd:element name="FLocat" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>FLocat: File Location.  
						The FLocat element provides a pointer to the location of a content file.    It uses the XLink syntax to provide linking information indicating the actual location of the content file, along with a few additional attributes	specifying additional linking information.
						NOTE: FLocat is an empty element.  The location of the resource pointed to MUST be stored in the xlink:href element.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="LOCATION"/>
					<xsd:attribute name="USE" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>USE: an optional string indicating the intended use of the referenced file.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="xlink:simpleLink"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="FContent" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>FContent: file content.  
						The FContent element is used to deliver a content file for a METS  document within the METS file itself.  The content file must be either Base 64 encoded, and contained within the subsidiary binData wrapper element, or consist of XML information and be contained within the subsidiary xmlData wrapper element.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="binData" type="xsd:base64Binary" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>binData:	A wrapper element used to contain a Base64 encoded file.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="xmlData" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>xmlData: A wrapper element used to contain  an XML encoded file.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:any namespace="##any" maxOccurs="unbounded" processContents="lax"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation>ID: an optional XML ID value
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="USE" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation>USE: an optional string indicating the intended  use of the embedded file.  Examples might include &quot;master&quot;, &quot;reference&quot;, and &quot;thumbnail&quot; for image files.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>			
			<xsd:element name="stream" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>stream: component byte stream
					A file may be composed of one or more subsidiary streams.  An MPEG4 file, for example, might contain separate audio and video streams, each of which has its own technical metadata associated with it.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:restriction base="xsd:anyType">
							<xsd:attribute name="ID" type="xsd:ID" use="optional">
								<xsd:annotation>
									<xsd:documentation>ID: an optional XML ID value
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="streamType" type="xsd:string" use="optional"></xsd:attribute>
							<xsd:attribute name="OWNERID" type="xsd:string" use="optional">
								<xsd:annotation>
									<xsd:documentation>OWNERID: an optional string attribute which may be      used to provide a unique identifier (including a URI) assigned to the file which may differ from the URI used to retrieve the file.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
								<xsd:annotation>
									<xsd:documentation>ADMID: an optional attribute used to list the XML ID attribute values for administrative metadata sections in the METS document that provide information regarding this file.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="DMDID" type="xsd:IDREFS" use="optional">
								<xsd:annotation>
									<xsd:documentation>DMDID: an optional attribute used to list the XML ID attribute values for descriptive metadata sections in the METS document that provide information regarding this file.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>							
						</xsd:restriction>
					</xsd:complexContent>
				</xsd:complexType>				
			</xsd:element>
			<xsd:element name="transformFile" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation></xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:restriction base="xsd:anyType">
							<xsd:attribute name="ID" type="xsd:ID" use="optional">
								<xsd:annotation>
									<xsd:documentation>ID: an optional XML ID value
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TRANSFORMTYPE" use="required">
								<xsd:annotation>
									<xsd:documentation>TRANSFORMTYPE: a type of transformation needed to render content of a file accessible (including unpacking a file into subsidiary files/streams). </xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="decompression"></xsd:enumeration>
										<xsd:enumeration value="decryption"></xsd:enumeration>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="TRANSFORMALGORITHM" type="xsd:string" use="required">
								<xsd:annotation>
									<xsd:documentation>TRANSFORMALGORITHM: a string describing the specific decompression or decryption routine used to access the contents of this file.</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TRANSFORMKEY" type="xsd:string" use="optional">
								<xsd:annotation>
									<xsd:documentation>TRANSFORMKEY: a key to be used with the transform algorithm for accessing the file's contents.</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TRANSFORMBEHAVIOR" type="xsd:IDREF" use="optional">
								<xsd:annotation>
									<xsd:documentation>TRANSFORMBEHAVIOR: an IDREF to a behavior element for this transformation</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TRANSFORMORDER" type="xsd:positiveInteger" use="required"></xsd:attribute>
						</xsd:restriction>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="file" type="fileType" minOccurs="0" maxOccurs="unbounded"></xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>ID: an XML ID value.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SEQ" type="xsd:int" use="optional">
			<xsd:annotation>
				<xsd:documentation>SEQ: an optional integer indicating the sequence of this  file relative to the others in its file group.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CREATED" type="xsd:dateTime" use="optional">
			<xsd:annotation>
				<xsd:documentation>CREATED: an optional dateTime providing the date of creation for the file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="FILECORE"></xsd:attributeGroup>
		<xsd:attribute name="OWNERID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>OWNERID: an optional string attribute which may be      used to provide a unique identifier (including a URI) assigned to the file which may differ from the URI used to retrieve the file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>ADMID: an optional attribute used to list the XML ID attribute values for administrative metadata sections in the METS document that provide information regarding this file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="DMDID" type="xsd:IDREFS" use="optional">
			<xsd:annotation>
				<xsd:documentation>DMDID: an optional attribute used to list the XML ID     attribute values for descriptive metadata sections in the METS document that provide information regarding this file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="GROUPID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>GROUPID: an optional string attribute which may be used to record an identifier that establishes a correspondence between this file and files in other file groups.  For example, a master image in one file group	would share the same GROUPID value with a reference copy in a second file group and a thumbnail image in a third file group.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="USE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>USE: an optional string attribute indicating the intended use of this file (e.g., &quot;master&quot;, &quot;reference&quot;, &quot;thumbnail&quot; for image files).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>

	</xsd:complexType>
	<xsd:simpleType name="URIs">
	    <xsd:list itemType="xsd:anyURI"/>
    </xsd:simpleType>
	<xsd:attributeGroup name="METADATA">
		<xsd:attribute name="MDTYPE" use="required">
			<xsd:annotation>
				<xsd:documentation>MDTYPE: a required attribute specifying the yype of metadata being pointed at (e.g., MARC, EAD, etc.).  It must have one of the following values:
MARC: any form of MARC record
MODS: metadata in the Library of Congress MODS format
EAD: Encoded Archival Description finding aid
DC: Dublin Core
NISOIMG: NISO Technical Metadata for Digital Still Images
LC-AV: technical metadata specified in the Library of Congress A/V prototyping project
VRA: Visual Resources Association Core
TEIHDR: Text Encoding Initiative Header
DDI: Data Documentation Initiative
FGDC: Federal Geographic Data Committee metadata
OTHER: metadata in a format not specified above.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MARC"/>
					<xsd:enumeration value="MODS"/>
					<xsd:enumeration value="EAD"/>
					<xsd:enumeration value="DC"/>
					<xsd:enumeration value="NISOIMG"/>
					<xsd:enumeration value="LC-AV"/>
					<xsd:enumeration value="VRA"/>
					<xsd:enumeration value="TEIHDR"/>
					<xsd:enumeration value="DDI"/>
					<xsd:enumeration value="FGDC"/>
				    <xsd:enumeration value="LOM"/>
					<xsd:enumeration value="PREMIS"/>
					<xsd:enumeration value="OTHER"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="OTHERMDTYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>OTHERMDTYPE: Other Metadata Type
	                       an optional string which may be used to record the particular form of metadata referenced by this element when the MDTYPE attribute has a value of &quot;OTHER&quot;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="LOCATION">
		<xsd:attribute name="LOCTYPE" use="required">
			<xsd:annotation>
				<xsd:documentation>LOCTYPE: Location Type
					the type of locator used to reference a file.  It must have one of the following values:
URN: Uniform Resource Name
URL: Uniform Resource Locator
PURL: Persistent URL
HANDLE: a CNRI Handle
DOI: A Digital Object Identifier
OTHER: a form of locator not specified above.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="ARK"/>
					<xsd:enumeration value="URN"/>
					<xsd:enumeration value="URL"/>
					<xsd:enumeration value="PURL"/>
					<xsd:enumeration value="HANDLE"/>
					<xsd:enumeration value="DOI"/>
					<xsd:enumeration value="OTHER"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="OTHERLOCTYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>OTHERLOCTYPE: an optional
						string attribute used to indicate an alternative LOCTYPE if the LOCTYPE attribute itself has a value of &quot;OTHER&quot;;
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="FILECORE">
		<xsd:attribute name="MIMETYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>MIMETYPE: an optional string attribute providing the MIME type for the file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SIZE" type="xsd:long" use="optional">
			<xsd:annotation>
				<xsd:documentation>SIZE: an optional long integer specifying the size of the file in bytes.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CHECKSUM" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>CHECKSUM: an optional string attribute providing a checksum value for the included file.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="CHECKSUMTYPE" use="optional">
			<xsd:annotation>
				<xsd:documentation>CHECKSUMTYPE: an optional attribute specifying the checksum algorithm used to produce the value contained in the CHECKSUM attribute.  CHECKSUMTYPE must contain one of the following values:
					HAVAL
					MD5
					SHA-1
					SHA-256
					SHA-384
					SHA-512
					TIGER
					WHIRLPOOL
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="HAVAL"/>
					<xsd:enumeration value="MD5"/>
					<xsd:enumeration value="SHA-1"/>
					<xsd:enumeration value="SHA-256"/>
					<xsd:enumeration value="SHA-384"/>
					<xsd:enumeration value="SHA-512"/>
					<xsd:enumeration value="TIGER"/>
					<xsd:enumeration value="WHIRLPOOL"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:attributeGroup>
</xsd:schema>
