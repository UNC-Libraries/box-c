<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config />

    <bean name="propertiesURI" class="java.lang.System"
        factory-method="getProperty">
        <constructor-arg index="0" value="server.properties.uri" />
        <!-- property name for properties URI location -->
        <constructor-arg index="1" value="classpath:server.properties" />
        <!-- default location for testing -->
    </bean>
    <bean id="serverProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <ref bean="propertiesURI" />
                <!-- non-runtime stuff <value>classpath:solr-ingest.properties</value> -->
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false" />
    </bean>

    <!-- Utils -->

    <bean id="permsHelper" class="edu.unc.lib.boxc.web.common.services.PermissionsHelper">
        <property name="accessControlService" ref="aclService" />
    </bean>

    <!-- Beans -->

    <bean id="accessBaseUrl" class="java.lang.String">
        <constructor-arg value="${access.base.url}" />
    </bean>
    
    <bean id="adminBaseUrl" class="java.lang.String">
        <constructor-arg value="${admin.base.url}" />
    </bean>
    
    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
            destroy-method="shutdown">
    </bean>
    
    <bean id="findingAidUrlService" class="edu.unc.lib.boxc.web.common.services.FindingAidUrlService"
            init-method="init">
        <property name="httpClientConnectionManager" ref="httpClientConnectionManager" />
        <property name="findingAidBaseUrl" value="${findingaids.base.url}" />
        <property name="maxCacheSize" value="${findingaids.maxCacheSize:1024}" />
        <property name="expireCacheSeconds" value="${findingaids.expireCacheSeconds:300}" />
        <property name="checkTimeoutSeconds" value="${findingaids.checkTimeoutSeconds:5}" />
    </bean>

    <bean id="xmlDocumentFilteringService" class="edu.unc.lib.boxc.web.common.services.XmlDocumentFilteringService"
            init-method="init">
        <property name="configPathString" value="/modsExclusionXPaths.json" />
    </bean>

    <!-- Import controllers -->
    <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>
    <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    </bean>

    <bean class="edu.unc.lib.boxc.web.common.view.XSLViewResolver">
        <property name="views">
            <map>
                <entry key="external.xslView.fullRecord.url" value="/recordTransformations/modsToFullRecord.xsl"/>
            </map>
        </property>
    </bean>
    
    <bean name="patronPrincipalProvider" class="edu.unc.lib.boxc.web.common.auth.PatronPrincipalProvider"
            init-method="init">
        <property name="patronGroupConfigPath" value="${acl.patronPrincipalConfig.path}" />
    </bean>
    
    <bean name="storeUserAccessControlFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreUserAccessControlFilter">
        <property name="patronPrincipalProvider" ref="patronPrincipalProvider" />
    </bean>
    
    <bean name="storeAccessLevelFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreAccessLevelFilter">
        <property name="queryLayer" ref="queryLayer" />
        <property name="requireViewAdmin" value="false" />
    </bean>
    
    <bean name="spoofShibbolethFilter" class="edu.unc.lib.boxc.web.common.auth.filters.SpoofShibbolethFilter">
        <property name="spoofEnabled" value="${spoofing.enabled:false}" />
        <property name="spoofEmailSuffix" value="${spoofing.emailSuffix:@localhost}" />
    </bean>
</beans>