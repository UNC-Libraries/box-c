<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2008 The University of North Carolina at Chapel Hill

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd">
    
    <bean name="propertiesURI" class="java.lang.System" factory-method="getProperty">
        <constructor-arg index="0" value="server.properties.uri"/>
        <!-- property name for properties URI location -->
        <constructor-arg index="1" value="classpath:server.properties"/>
        <!-- default location for testing -->
    </bean>
    <bean id="serverProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <ref bean="propertiesURI"/>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false"/>
    </bean>
    
    <bean id="injectedCdrVersion" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="edu.unc.lib.boxc.model.api.SoftwareAgentConstants.setCdrVersion" />
        <property name="arguments">
            <list>
                <value>5.0</value>
            </list>
        </property>
    </bean>
  
    <!-- a pooling based JMS provider -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL"> 
                    <value>${jms.brokerUrl}</value>
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"
        destroy-method="destroy">
        <constructor-arg ref="poolConfig"/>
        <constructor-arg type="String" value="${redis.host:localhost}" />
        <constructor-arg type="int" value="${redis.port:6379}" />
    </bean>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="15"/>
        <property name="minIdle" value="2"/>
        <property name="maxTotal" value="25"/>
    </bean>
    
    <bean id="jesqueConfig" class="net.greghaines.jesque.Config">
        <constructor-arg value="${redis.host:localhost}" type="java.lang.String" />
        <constructor-arg value="${redis.port:6379}" type="int" />
        <constructor-arg value="2000" type="int" />
        <constructor-arg type="java.lang.String">
            <null />
        </constructor-arg>
        <constructor-arg value="resque" type="java.lang.String" />
        <constructor-arg value="0" type="int" />
    </bean>
    
    <bean id="jesqueClient" class="net.greghaines.jesque.client.ClientPoolImpl"
        scope="prototype">
        <constructor-arg ref="jesqueConfig" />
        <constructor-arg ref="jedisPool" />
    </bean>
    
    <bean id="moveObjectsService"
        class="edu.unc.lib.boxc.operations.move.MoveObjectsService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="objectPathFactory" ref="objectPathFactory" />
        <property name="asynchronous" value="true" />
        <property name="moveExecutor" ref="moveExecutor" />
    </bean>
    
    <bean id="destroyObjectsJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.destroy.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="destroyObjectsService"
        class="edu.unc.lib.boxc.operations.jms.destroy.DestroyObjectsService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="jmsTemplate" ref="destroyObjectsJmsTemplate" />
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="operationsMessageSender" class="edu.unc.lib.boxc.operations.jms.OperationsMessageSender">
        <property name="jmsTemplate" ref="jmsTemplate" />
    </bean>
    
    <bean id="schematronValidator" class="edu.unc.lib.boxc.operations.xml.SchematronValidator"
       init-method="loadSchemas">
        <property name="schemas">
            <map>
                <entry key="#{T(edu.unc.lib.boxc.deposit.impl.mets.METSProfile).CDR_SIMPLE.name}"
                    value="classpath:edu/unc/lib/dl/schematron/simple_mets_profile.sch" />
                <entry key="object-mods"
                    value="classpath:edu/unc/lib/dl/schematron/object-mods.sch" />
                <entry key="vocabularies-mods"
                    value="classpath:edu/unc/lib/dl/schematron/vocabularies-mods.sch" />
            </map>
        </property>
    </bean>
    
    <bean id="schemaFactory" class="edu.unc.lib.boxc.common.xml.SecureXMLFactory"
        factory-method="createSchemaFactory" scope="prototype">
    </bean>
    
    <bean id="modsValidator" class="edu.unc.lib.boxc.operations.xml.MODSValidator">
        <property name="schematronValidator" ref="schematronValidator" />
        <property name="modsSchema">
            <bean class="javax.xml.validation.Schema" factory-bean="schemaFactory"
                factory-method="newSchema">
                <constructor-arg>
                    <list value-type="javax.xml.transform.Source">
                        <bean class="javax.xml.transform.stream.StreamSource">
                            <constructor-arg type="java.io.InputStream"
                                value="classpath:/schemas/xml.xsd" />
                        </bean>
                        <bean class="javax.xml.transform.stream.StreamSource">
                            <constructor-arg type="java.io.InputStream"
                                value="classpath:/schemas/xlink.xsd" />
                        </bean>
                        <bean class="javax.xml.transform.stream.StreamSource">
                            <constructor-arg type="java.io.InputStream"
                                value="classpath:/schemas/mods-3-7.xsd" />
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
    <util:map id="vocabHelperClassMap">
        <entry key="Affiliation" value="edu.unc.lib.dl.xml.DepartmentOntologyUtil"/>
        <entry key="JSONVocabulary" value="edu.unc.lib.dl.util.JSONVocabularyHelper"/>
    </util:map>
    
    <bean id="vocabManager" class="edu.unc.lib.dl.util.VocabularyHelperManager">
        <property name="helperClasses" ref="vocabHelperClassMap" />
    </bean>
    
    <bean id="bulkMetadataQueueName" class="java.lang.String">
        <constructor-arg value="#{T(edu.unc.lib.boxc.deposit.api.RedisWorkerConstants).BULK_UPDATE_QUEUE}"/>
    </bean>
    
    <bean id="dataDir" class="java.lang.String">
        <constructor-arg value="${data.dir}"/>
    </bean>

    <bean id="moveExecutor" class="java.util.concurrent.Executors"
            factory-method="newFixedThreadPool" destroy-method="shutdownNow">
            <constructor-arg value="${services.move.workers:1}"/>
    </bean>
    
    <!-- Access related beans -->
    
    <bean name="patronPrincipalProvider" class="edu.unc.lib.boxc.web.common.auth.PatronPrincipalProvider"
            init-method="init">
        <property name="patronGroupConfigPath" value="${acl.patronPrincipalConfig.path}" />
    </bean>
    
    <bean name="storeUserAccessControlFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreUserAccessControlFilter">
        <property name="patronPrincipalProvider" ref="patronPrincipalProvider" />
    </bean>
    
    <bean name="storeAccessLevelFilter" class="edu.unc.lib.boxc.web.common.auth.filters.StoreAccessLevelFilter">
        <property name="queryLayer" ref="queryLayer" />
        <property name="requireViewAdmin" value="true" />
        <property name="nonAdminRedirectUrl" value="/error/401.html" />
    </bean>
    
    <bean name="spoofShibbolethFilter" class="edu.unc.lib.boxc.web.common.auth.filters.SpoofShibbolethFilter">
        <property name="spoofEnabled" value="${spoofing.enabled:false}" />
        <property name="spoofEmailSuffix" value="${spoofing.emailSuffix:@localhost}" />
    </bean>
    
    <bean id="gaTrackingID" class="java.lang.String">
        <constructor-arg
            value="${google.trackingId}" />
    </bean>
    
    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
            destroy-method="shutdown">
    </bean>
    
    <bean id="analyticsTracker" class="edu.unc.lib.dl.ui.util.AnalyticsTrackerUtil">
        <property name="gaTrackingID" ref="gaTrackingID" />
        <property name="solrSearchService" ref="unrestrictedSolrSearchService" />
        <property name="httpClientConnectionManager" ref="httpClientConnectionManager" />
    </bean>
    
    <bean id="fedoraContentService" class="edu.unc.lib.dl.ui.service.FedoraContentService">
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="accessControlService" ref="aclService" />
    </bean>
    
    <bean id="addContainerService" class="edu.unc.lib.dl.cdr.services.processing.AddContainerService">
        <property name="aclService" ref="aclService" />
        <property name="patronService" ref="patronAccessAssignmentService" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="storageLocationManager" ref="storageLocationManager" />
        <property name="updateDescriptionService" ref="updateDescriptionService" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>
    
    <bean id="editFilenameService" class="edu.unc.lib.boxc.operations.edit.EditFilenameService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>

    <bean id="editTitleService" class="edu.unc.lib.boxc.operations.edit.EditTitleService">
        <property name="aclService" ref="aclService" />
        <property name="repoObjLoader" ref="repositoryObjectLoader" />
        <property name="updateDescriptionService" ref="updateDescriptionService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
    </bean>
    
    <bean id="runEnhancementMessageSender" class="edu.unc.lib.boxc.operations.jms.MessageSender">
        <property name="jmsTemplate" ref="enhancementsJmsTemplate"/>
    </bean>

    <bean id="runEnhancementService" class="edu.unc.lib.dl.cdr.services.processing.RunEnhancementsService">
        <property name="aclService" ref="aclService" />
        <property name="messageSender" ref="runEnhancementMessageSender" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="queryLayer" ref="queryLayer" />
    </bean>

    <bean id="enhancementsJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.enhancement.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="solrUpdateJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.solrupdate.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="solrIndexingMessageSender" class="edu.unc.lib.boxc.operations.jms.IndexingMessageSender" >
        <property name="jmsTemplate" ref="solrUpdateJmsTemplate" />
    </bean>
    
    <bean id="solrIndexingService" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingService" >
        <property name="aclService" ref="aclService" />
        <property name="indexingMessageSender" ref="solrIndexingMessageSender" />
    </bean>
    
    <bean id="triplesUpdateJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.triplesupdate.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="triplesIndexingMessageSender" class="edu.unc.lib.boxc.operations.jms.IndexingMessageSender" >
        <property name="jmsTemplate" ref="triplesUpdateJmsTemplate" />
    </bean>
    
    <bean id="triplesIndexingService" class="edu.unc.lib.boxc.operations.jms.indexing.IndexingService" >
        <property name="aclService" ref="aclService" />
        <property name="indexingMessageSender" ref="triplesIndexingMessageSender" />
    </bean>
    
    <bean id="markForDeletionService" class="edu.unc.lib.boxc.operations.delete.MarkForDeletionService">
        <property name="aclService" ref="aclService" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="sparqlUpdateService" ref="fedoraSparqlUpdateService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
  </bean>

  <bean id="setAsPrimaryObjectService" class="edu.unc.lib.dl.cdr.services.processing.SetAsPrimaryObjectService" >
      <property name="aclService" ref="aclService" />
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="operationsMessageSender" ref="operationsMessageSender" />
  </bean>
  
  <bean id="versionedDatastreamService" class="edu.unc.lib.boxc.operations.versioning.VersionedDatastreamService" >
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
      <property name="binaryTransferService" ref="binaryTransferService" />
      <property name="transactionManager" ref="transactionManager" />
  </bean>
  
  <bean id="updateDescriptionService" class="edu.unc.lib.boxc.operations.edit.UpdateDescriptionService" >
      <property name="aclService" ref="aclService" />
      <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
      <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
      <property name="operationsMessageSender" ref="operationsMessageSender" />
      <property name="modsValidator" ref="modsValidator" />
      <property name="versionedDatastreamService" ref="versionedDatastreamService" />
  </bean>

    <bean id="editThumbnailService" class="edu.unc.lib.dl.cdr.services.processing.ImportThumbnailService"
          init-method="init">
        <property name="aclService" ref="aclService" />
        <property name="messageSender" ref="runEnhancementMessageSender" />
        <property name="sourceImagesDir" value="${sourceImages.dir}" />
    </bean>
  
  <bean id="emailHandler" class="edu.unc.lib.boxc.operations.impl.utils.EmailHandler">
    <property name="fromAddress" value="${repository.from.email}" />
    <property name="mailSender" ref="mailSender" />
  </bean>
  
  <bean id="xmlExportService" class="edu.unc.lib.dl.cdr.services.processing.XMLExportService" >
      <property name="searchStateFactory" ref="searchStateFactory" />
      <property name="queryLayer" ref="queryLayer" />
      <property name="aclService" ref="aclService" />
      <property name="repoObjLoader" ref="repositoryObjectLoader" />
      <property name="emailHandler" ref="emailHandler" />
      <property name="asynchronous" value="true" />
  </bean>
  
  <bean id="importXmlJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
      <property name="connectionFactory" ref="jmsFactory" />
      <property name="defaultDestinationName" value="${cdr.importxml.stream}" />
      <property name="pubSubDomain" value="false" />
  </bean>
  
  <bean id="xmlImportService" class="edu.unc.lib.boxc.operations.importxml.ImportXMLService"
        init-method="init">
      <property name="dataDir" ref="dataDir" />
      <property name="jmsTemplate" ref="importXmlJmsTemplate"/>
  </bean>
  
    <bean id="fromAddress" class="java.lang.String">
        <constructor-arg value="${repository.from.email}" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host:localhost}" />
        <property name="port" value="${smtp.port:25}" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="derivativeService" class="edu.unc.lib.boxc.model.fcrepo.services.DerivativeService">
        <property name="derivativeDir" value="${derivative.dir}" />
    </bean>
   
    <bean id="derivativeContentService" class="edu.unc.lib.dl.ui.service.DerivativeContentService">
        <property name="accessControlService" ref="aclService" />
        <property name="derivativeService" ref="derivativeService" />
    </bean>
    
    <bean id="staffRoleAssignmentService" class="edu.unc.lib.boxc.operations.acl.StaffRoleAssignmentService">
        <property name="aclService" ref="aclService" />
        <property name="aclFactory" ref="uncachedInheritedAclFactory" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>
    
    <bean id="patronAccessOperationTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="defaultDestinationName" value="${cdr.patron.access.assignment.stream}" />
        <property name="pubSubDomain" value="false" />
    </bean>

    <bean id="patronAccessOperationSender" class="edu.unc.lib.boxc.operations.acl.PatronAccessOperationSender">
        <property name="jmsTemplate" ref="patronAccessOperationTemplate"/>
    </bean>
    
    <bean id="patronAccessAssignmentService" class="edu.unc.lib.boxc.operations.acl.PatronAccessAssignmentService">
        <property name="aclService" ref="aclService" />
        <property name="operationsMessageSender" ref="operationsMessageSender" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="premisLoggerFactory" ref="premisLoggerFactory" />
    </bean>
    
    <bean id="binaryTransferService" class="edu.unc.lib.boxc.persist.impl.transfer.BinaryTransferServiceImpl">
        <property name="storageLocationManager" ref="storageLocationManager" />
    </bean>
    
    <bean id="storageLocationManager" class="edu.unc.lib.boxc.persist.impl.storage.StorageLocationManagerImpl"
            init-method="init">
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="pathFactory" ref="contentPathFactory" />
        <property name="configPath" value="${storageLocations.path}" />
        <property name="mappingPath" value="${storageLocationMappings.path}" />
    </bean>
    
    <bean id="exportCsvService" class="edu.unc.lib.dl.cdr.services.processing.ExportCsvService">
        <property name="childrenCountService" ref="childrenCountService"/>
        <property name="aclService" ref="aclService"/>
        <property name="queryLayer" ref="queryLayer"/>
    </bean>
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="edu.unc.lib.dl.ui.util.SerializationUtil.injectSettings"/>
        <property name="arguments">
            <list>
                <ref bean="searchSettings"/>
                <ref bean="solrSettings"/>
                <ref bean="globalPermissionEvaluator" />
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1500000000"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>
